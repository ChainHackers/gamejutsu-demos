{
  "address": "0x461A1001D303F83eB02A921016C8A6beD0469e89",
  "abi": [
    {
      "inputs": [],
      "name": "defaultInitialGameState",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "gameId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "state",
              "type": "bytes"
            }
          ],
          "internalType": "struct IGameJutsuRules.GameState",
          "name": "_gameState",
          "type": "tuple"
        },
        {
          "internalType": "uint8",
          "name": "playerId",
          "type": "uint8"
        },
        {
          "internalType": "bytes",
          "name": "_move",
          "type": "bytes"
        }
      ],
      "name": "isValidMove",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "gameId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "state",
              "type": "bytes"
            }
          ],
          "internalType": "struct IGameJutsuRules.GameState",
          "name": "_gameState",
          "type": "tuple"
        },
        {
          "internalType": "uint8",
          "name": "playerId",
          "type": "uint8"
        },
        {
          "internalType": "bytes",
          "name": "_move",
          "type": "bytes"
        }
      ],
      "name": "transition",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "gameId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "state",
              "type": "bytes"
            }
          ],
          "internalType": "struct IGameJutsuRules.GameState",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "4": "contracts/tic-tac-toe/TicTacToeRules.sol",
    "6": "interfaces/IGameJutsuRules.sol"
  },
  "ast": {
    "absolutePath": "contracts/tic-tac-toe/TicTacToeRules.sol",
    "exportedSymbols": {
      "IGameJutsuRules": [1718],
      "TicTacToeRules": [1263]
    },
    "id": 1264,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1049,
        "literals": ["solidity", "^", "0.8", ".0"],
        "nodeType": "PragmaDirective",
        "src": "443:23:4"
      },
      {
        "absolutePath": "interfaces/IGameJutsuRules.sol",
        "file": "../../interfaces/IGameJutsuRules.sol",
        "id": 1050,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1264,
        "sourceUnit": 1719,
        "src": "468:46:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1052,
              "name": "IGameJutsuRules",
              "nameLocations": ["979:15:4"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1718,
              "src": "979:15:4"
            },
            "id": 1053,
            "nodeType": "InheritanceSpecifier",
            "src": "979:15:4"
          }
        ],
        "canonicalName": "TicTacToeRules",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1051,
          "nodeType": "StructuredDocumentation",
          "src": "516:435:4",
          "text": "@title TicTacToe Rules\n@notice Our take on the classic game, rules defined on-chain to never be checked\n@notice except by the arbiter when a dispute arises.\n@notice ETHOnline2022 submission by ChainHackers\n@author Gene A. Tsvigun\n@dev The state encodes the board as a 3x3 array of uint8s with 0 for empty, 1 for X, and 2 for O\n@dev explicitly keeping wins as `bool crossesWin` and `bool noughtsWin`"
        },
        "fullyImplemented": true,
        "id": 1263,
        "linearizedBaseContracts": [1263, 1718],
        "name": "TicTacToeRules",
        "nameLocation": "961:14:4",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "TicTacToeRules.Board",
            "id": 1062,
            "members": [
              {
                "constant": false,
                "id": 1057,
                "mutability": "mutable",
                "name": "cells",
                "nameLocation": "1034:5:4",
                "nodeType": "VariableDeclaration",
                "scope": 1062,
                "src": "1025:14:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint8_$9_storage_ptr",
                  "typeString": "uint8[9]"
                },
                "typeName": {
                  "baseType": {
                    "id": 1054,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1025:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 1056,
                  "length": {
                    "hexValue": "39",
                    "id": 1055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1031:1:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_9_by_1",
                      "typeString": "int_const 9"
                    },
                    "value": "9"
                  },
                  "nodeType": "ArrayTypeName",
                  "src": "1025:8:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint8_$9_storage_ptr",
                    "typeString": "uint8[9]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1059,
                "mutability": "mutable",
                "name": "crossesWin",
                "nameLocation": "1090:10:4",
                "nodeType": "VariableDeclaration",
                "scope": 1062,
                "src": "1085:15:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 1058,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1085:4:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1061,
                "mutability": "mutable",
                "name": "naughtsWin",
                "nameLocation": "1115:10:4",
                "nodeType": "VariableDeclaration",
                "scope": 1062,
                "src": "1110:15:4",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 1060,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1110:4:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Board",
            "nameLocation": "1009:5:4",
            "nodeType": "StructDefinition",
            "scope": 1263,
            "src": "1002:130:4",
            "visibility": "public"
          },
          {
            "canonicalName": "TicTacToeRules.Move",
            "id": 1064,
            "name": "Move",
            "nameLocation": "1139:4:4",
            "nodeType": "UserDefinedValueTypeDefinition",
            "src": "1134:19:4",
            "underlyingType": {
              "id": 1063,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "1147:5:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            }
          },
          {
            "baseFunctions": [1699],
            "body": {
              "id": 1134,
              "nodeType": "Block",
              "src": "1287:334:4",
              "statements": [
                {
                  "assignments": [1079],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1079,
                      "mutability": "mutable",
                      "name": "b",
                      "nameLocation": "1310:1:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1134,
                      "src": "1297:14:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Board_$1062_memory_ptr",
                        "typeString": "struct TicTacToeRules.Board"
                      },
                      "typeName": {
                        "id": 1078,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1077,
                          "name": "Board",
                          "nameLocations": ["1297:5:4"],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1062,
                          "src": "1297:5:4"
                        },
                        "referencedDeclaration": 1062,
                        "src": "1297:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Board_$1062_storage_ptr",
                          "typeString": "struct TicTacToeRules.Board"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1087,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1082,
                          "name": "_gameState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1067,
                          "src": "1325:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_GameState_$1687_calldata_ptr",
                            "typeString": "struct IGameJutsuRules.GameState calldata"
                          }
                        },
                        "id": 1083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1336:5:4",
                        "memberName": "state",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1686,
                        "src": "1325:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 1084,
                            "name": "Board",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1062,
                            "src": "1344:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Board_$1062_storage_ptr_$",
                              "typeString": "type(struct TicTacToeRules.Board storage pointer)"
                            }
                          }
                        ],
                        "id": 1085,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1343:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Board_$1062_storage_ptr_$",
                          "typeString": "type(struct TicTacToeRules.Board storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_type$_t_struct$_Board_$1062_storage_ptr_$",
                          "typeString": "type(struct TicTacToeRules.Board storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 1080,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1314:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 1081,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1318:6:4",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "1314:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 1086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1314:37:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Board_$1062_memory_ptr",
                      "typeString": "struct TicTacToeRules.Board memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1297:54:4"
                },
                {
                  "assignments": [1089],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1089,
                      "mutability": "mutable",
                      "name": "_m",
                      "nameLocation": "1367:2:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1134,
                      "src": "1361:8:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 1088,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "1361:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1097,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1092,
                        "name": "_move",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1071,
                        "src": "1383:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 1094,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1391:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": {
                              "id": 1093,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "1391:5:4",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 1095,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1390:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint8_$",
                          "typeString": "type(uint8)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_type$_t_uint8_$",
                          "typeString": "type(uint8)"
                        }
                      ],
                      "expression": {
                        "id": 1090,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1372:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 1091,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1376:6:4",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "1372:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 1096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1372:26:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1361:37:4"
                },
                {
                  "assignments": [1100],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1100,
                      "mutability": "mutable",
                      "name": "m",
                      "nameLocation": "1413:1:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1134,
                      "src": "1408:6:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Move_$1064",
                        "typeString": "TicTacToeRules.Move"
                      },
                      "typeName": {
                        "id": 1099,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1098,
                          "name": "Move",
                          "nameLocations": ["1408:4:4"],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1064,
                          "src": "1408:4:4"
                        },
                        "referencedDeclaration": 1064,
                        "src": "1408:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Move_$1064",
                          "typeString": "TicTacToeRules.Move"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1105,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1103,
                        "name": "_m",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1089,
                        "src": "1427:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "id": 1101,
                        "name": "Move",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1064,
                        "src": "1417:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_userDefinedValueType$_Move_$1064_$",
                          "typeString": "type(TicTacToeRules.Move)"
                        }
                      },
                      "id": 1102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1422:4:4",
                      "memberName": "wrap",
                      "nodeType": "MemberAccess",
                      "src": "1417:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_wrap_pure$_t_uint8_$returns$_t_userDefinedValueType$_Move_$1064_$",
                        "typeString": "function (uint8) pure returns (TicTacToeRules.Move)"
                      }
                    },
                    "id": 1104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1417:13:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Move_$1064",
                      "typeString": "TicTacToeRules.Move"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1408:22:4"
                },
                {
                  "assignments": [1107],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1107,
                      "mutability": "mutable",
                      "name": "playerIdMatchesTurn",
                      "nameLocation": "1445:19:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1134,
                      "src": "1440:24:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1106,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1440:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1114,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 1108,
                          "name": "_gameState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1067,
                          "src": "1467:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_GameState_$1687_calldata_ptr",
                            "typeString": "struct IGameJutsuRules.GameState calldata"
                          }
                        },
                        "id": 1109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1478:5:4",
                        "memberName": "nonce",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1684,
                        "src": "1467:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "%",
                      "rightExpression": {
                        "hexValue": "32",
                        "id": 1110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1486:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "1467:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 1112,
                      "name": "playerId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1069,
                      "src": "1491:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "1467:32:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1440:59:4"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 1127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1115,
                            "name": "playerIdMatchesTurn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1107,
                            "src": "1516:19:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "id": 1118,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "1539:13:4",
                            "subExpression": {
                              "expression": {
                                "id": 1116,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1079,
                                "src": "1540:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Board_$1062_memory_ptr",
                                  "typeString": "struct TicTacToeRules.Board memory"
                                }
                              },
                              "id": 1117,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1542:10:4",
                              "memberName": "crossesWin",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1059,
                              "src": "1540:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1516:36:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "id": 1122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "1556:13:4",
                          "subExpression": {
                            "expression": {
                              "id": 1120,
                              "name": "b",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1079,
                              "src": "1557:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Board_$1062_memory_ptr",
                                "typeString": "struct TicTacToeRules.Board memory"
                              }
                            },
                            "id": 1121,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1559:10:4",
                            "memberName": "naughtsWin",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1061,
                            "src": "1557:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1516:53:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "arguments": [
                          {
                            "id": 1125,
                            "name": "m",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1100,
                            "src": "1591:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_Move_$1064",
                              "typeString": "TicTacToeRules.Move"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_userDefinedValueType$_Move_$1064",
                              "typeString": "TicTacToeRules.Move"
                            }
                          ],
                          "id": 1124,
                          "name": "isMoveWithinRange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1262,
                          "src": "1573:17:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_Move_$1064_$returns$_t_bool_$",
                            "typeString": "function (TicTacToeRules.Move) pure returns (bool)"
                          }
                        },
                        "id": 1126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1573:20:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "1516:77:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 1129,
                          "name": "b",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1079,
                          "src": "1609:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Board_$1062_memory_ptr",
                            "typeString": "struct TicTacToeRules.Board memory"
                          }
                        },
                        {
                          "id": 1130,
                          "name": "m",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1100,
                          "src": "1612:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_Move_$1064",
                            "typeString": "TicTacToeRules.Move"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Board_$1062_memory_ptr",
                            "typeString": "struct TicTacToeRules.Board memory"
                          },
                          {
                            "typeIdentifier": "t_userDefinedValueType$_Move_$1064",
                            "typeString": "TicTacToeRules.Move"
                          }
                        ],
                        "id": 1128,
                        "name": "isCellEmpty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1246,
                        "src": "1597:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_struct$_Board_$1062_memory_ptr_$_t_userDefinedValueType$_Move_$1064_$returns$_t_bool_$",
                          "typeString": "function (struct TicTacToeRules.Board memory,TicTacToeRules.Move) pure returns (bool)"
                        }
                      },
                      "id": 1131,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1597:17:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1516:98:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1076,
                  "id": 1133,
                  "nodeType": "Return",
                  "src": "1509:105:4"
                }
              ]
            },
            "functionSelector": "0bf9ae69",
            "id": 1135,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isValidMove",
            "nameLocation": "1168:11:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1073,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1263:8:4"
            },
            "parameters": {
              "id": 1072,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1067,
                  "mutability": "mutable",
                  "name": "_gameState",
                  "nameLocation": "1199:10:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1135,
                  "src": "1180:29:4",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_GameState_$1687_calldata_ptr",
                    "typeString": "struct IGameJutsuRules.GameState"
                  },
                  "typeName": {
                    "id": 1066,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1065,
                      "name": "GameState",
                      "nameLocations": ["1180:9:4"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1687,
                      "src": "1180:9:4"
                    },
                    "referencedDeclaration": 1687,
                    "src": "1180:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_GameState_$1687_storage_ptr",
                      "typeString": "struct IGameJutsuRules.GameState"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1069,
                  "mutability": "mutable",
                  "name": "playerId",
                  "nameLocation": "1217:8:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1135,
                  "src": "1211:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1068,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1211:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1071,
                  "mutability": "mutable",
                  "name": "_move",
                  "nameLocation": "1242:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1135,
                  "src": "1227:20:4",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1070,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1227:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1179:69:4"
            },
            "returnParameters": {
              "id": 1076,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1075,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1135,
                  "src": "1281:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1074,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1281:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1280:6:4"
            },
            "scope": 1263,
            "src": "1159:462:4",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [1712],
            "body": {
              "id": 1199,
              "nodeType": "Block",
              "src": "1766:255:4",
              "statements": [
                {
                  "assignments": [1151],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1151,
                      "mutability": "mutable",
                      "name": "b",
                      "nameLocation": "1789:1:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1199,
                      "src": "1776:14:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Board_$1062_memory_ptr",
                        "typeString": "struct TicTacToeRules.Board"
                      },
                      "typeName": {
                        "id": 1150,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1149,
                          "name": "Board",
                          "nameLocations": ["1776:5:4"],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1062,
                          "src": "1776:5:4"
                        },
                        "referencedDeclaration": 1062,
                        "src": "1776:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Board_$1062_storage_ptr",
                          "typeString": "struct TicTacToeRules.Board"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1159,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1154,
                          "name": "_gameState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1138,
                          "src": "1804:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_GameState_$1687_calldata_ptr",
                            "typeString": "struct IGameJutsuRules.GameState calldata"
                          }
                        },
                        "id": 1155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1815:5:4",
                        "memberName": "state",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1686,
                        "src": "1804:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 1156,
                            "name": "Board",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1062,
                            "src": "1823:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Board_$1062_storage_ptr_$",
                              "typeString": "type(struct TicTacToeRules.Board storage pointer)"
                            }
                          }
                        ],
                        "id": 1157,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1822:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Board_$1062_storage_ptr_$",
                          "typeString": "type(struct TicTacToeRules.Board storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_type$_t_struct$_Board_$1062_storage_ptr_$",
                          "typeString": "type(struct TicTacToeRules.Board storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 1152,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1793:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 1153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1797:6:4",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "1793:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 1158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1793:37:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Board_$1062_memory_ptr",
                      "typeString": "struct TicTacToeRules.Board memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1776:54:4"
                },
                {
                  "assignments": [1161],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1161,
                      "mutability": "mutable",
                      "name": "_m",
                      "nameLocation": "1846:2:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1199,
                      "src": "1840:8:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 1160,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "1840:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1169,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1164,
                        "name": "_move",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1142,
                        "src": "1862:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 1166,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1870:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": {
                              "id": 1165,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "1870:5:4",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 1167,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1869:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint8_$",
                          "typeString": "type(uint8)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_type$_t_uint8_$",
                          "typeString": "type(uint8)"
                        }
                      ],
                      "expression": {
                        "id": 1162,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1851:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 1163,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1855:6:4",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "1851:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 1168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1851:26:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1840:37:4"
                },
                {
                  "expression": {
                    "id": 1184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 1170,
                          "name": "b",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1151,
                          "src": "1887:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Board_$1062_memory_ptr",
                            "typeString": "struct TicTacToeRules.Board memory"
                          }
                        },
                        "id": 1173,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1889:5:4",
                        "memberName": "cells",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1057,
                        "src": "1887:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$9_memory_ptr",
                          "typeString": "uint8[9] memory"
                        }
                      },
                      "id": 1174,
                      "indexExpression": {
                        "id": 1172,
                        "name": "_m",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1161,
                        "src": "1895:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1887:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1182,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "31",
                            "id": 1177,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1907:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1181,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1178,
                                "name": "_gameState",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1138,
                                "src": "1911:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_GameState_$1687_calldata_ptr",
                                  "typeString": "struct IGameJutsuRules.GameState calldata"
                                }
                              },
                              "id": 1179,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1922:5:4",
                              "memberName": "nonce",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1684,
                              "src": "1911:16:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "%",
                            "rightExpression": {
                              "hexValue": "32",
                              "id": 1180,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1930:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "src": "1911:20:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1907:24:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1901:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint8_$",
                          "typeString": "type(uint8)"
                        },
                        "typeName": {
                          "id": 1175,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "1901:5:4",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1183,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1901:31:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "1887:45:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 1185,
                  "nodeType": "ExpressionStatement",
                  "src": "1887:45:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1187,
                          "name": "_gameState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1138,
                          "src": "1959:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_GameState_$1687_calldata_ptr",
                            "typeString": "struct IGameJutsuRules.GameState calldata"
                          }
                        },
                        "id": 1188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1970:6:4",
                        "memberName": "gameId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1682,
                        "src": "1959:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1189,
                            "name": "_gameState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1138,
                            "src": "1978:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_GameState_$1687_calldata_ptr",
                              "typeString": "struct IGameJutsuRules.GameState calldata"
                            }
                          },
                          "id": 1190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1989:5:4",
                          "memberName": "nonce",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1684,
                          "src": "1978:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 1191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1997:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "1978:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1195,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1151,
                            "src": "2011:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Board_$1062_memory_ptr",
                              "typeString": "struct TicTacToeRules.Board memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Board_$1062_memory_ptr",
                              "typeString": "struct TicTacToeRules.Board memory"
                            }
                          ],
                          "expression": {
                            "id": 1193,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2000:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2004:6:4",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "2000:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2000:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1186,
                      "name": "GameState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1687,
                      "src": "1949:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_GameState_$1687_storage_ptr_$",
                        "typeString": "type(struct IGameJutsuRules.GameState storage pointer)"
                      }
                    },
                    "id": 1197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1949:65:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_GameState_$1687_memory_ptr",
                      "typeString": "struct IGameJutsuRules.GameState memory"
                    }
                  },
                  "functionReturnParameters": 1148,
                  "id": 1198,
                  "nodeType": "Return",
                  "src": "1942:72:4"
                }
              ]
            },
            "functionSelector": "4ace4cfb",
            "id": 1200,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transition",
            "nameLocation": "1636:10:4",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1144,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1730:8:4"
            },
            "parameters": {
              "id": 1143,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1138,
                  "mutability": "mutable",
                  "name": "_gameState",
                  "nameLocation": "1666:10:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1200,
                  "src": "1647:29:4",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_GameState_$1687_calldata_ptr",
                    "typeString": "struct IGameJutsuRules.GameState"
                  },
                  "typeName": {
                    "id": 1137,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1136,
                      "name": "GameState",
                      "nameLocations": ["1647:9:4"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1687,
                      "src": "1647:9:4"
                    },
                    "referencedDeclaration": 1687,
                    "src": "1647:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_GameState_$1687_storage_ptr",
                      "typeString": "struct IGameJutsuRules.GameState"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1140,
                  "mutability": "mutable",
                  "name": "playerId",
                  "nameLocation": "1684:8:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1200,
                  "src": "1678:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1139,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1678:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1142,
                  "mutability": "mutable",
                  "name": "_move",
                  "nameLocation": "1709:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1200,
                  "src": "1694:20:4",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1141,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1694:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1646:69:4"
            },
            "returnParameters": {
              "id": 1148,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1147,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1200,
                  "src": "1748:16:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_GameState_$1687_memory_ptr",
                    "typeString": "struct IGameJutsuRules.GameState"
                  },
                  "typeName": {
                    "id": 1146,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1145,
                      "name": "GameState",
                      "nameLocations": ["1748:9:4"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1687,
                      "src": "1748:9:4"
                    },
                    "referencedDeclaration": 1687,
                    "src": "1748:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_GameState_$1687_storage_ptr",
                      "typeString": "struct IGameJutsuRules.GameState"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1747:18:4"
            },
            "scope": 1263,
            "src": "1627:394:4",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [1717],
            "body": {
              "id": 1223,
              "nodeType": "Block",
              "src": "2099:84:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "components": [
                              {
                                "hexValue": "30",
                                "id": 1208,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2134:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "30",
                                "id": 1209,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2137:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "30",
                                "id": 1210,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2140:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "30",
                                "id": 1211,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2143:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "30",
                                "id": 1212,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2146:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "30",
                                "id": 1213,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2149:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "30",
                                "id": 1214,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2152:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "30",
                                "id": 1215,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2155:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "30",
                                "id": 1216,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2158:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "id": 1217,
                            "isConstant": false,
                            "isInlineArray": true,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "2133:27:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint8_$9_memory_ptr",
                              "typeString": "uint8[9] memory"
                            }
                          },
                          {
                            "hexValue": "66616c7365",
                            "id": 1218,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2162:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          {
                            "hexValue": "66616c7365",
                            "id": 1219,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2169:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint8_$9_memory_ptr",
                              "typeString": "uint8[9] memory"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 1207,
                          "name": "Board",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1062,
                          "src": "2127:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Board_$1062_storage_ptr_$",
                            "typeString": "type(struct TicTacToeRules.Board storage pointer)"
                          }
                        },
                        "id": 1220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2127:48:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Board_$1062_memory_ptr",
                          "typeString": "struct TicTacToeRules.Board memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Board_$1062_memory_ptr",
                          "typeString": "struct TicTacToeRules.Board memory"
                        }
                      ],
                      "expression": {
                        "id": 1205,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "2116:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 1206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2120:6:4",
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "src": "2116:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 1221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2116:60:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 1204,
                  "id": 1222,
                  "nodeType": "Return",
                  "src": "2109:67:4"
                }
              ]
            },
            "functionSelector": "8f5afe2f",
            "id": 1224,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "defaultInitialGameState",
            "nameLocation": "2036:23:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1201,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2059:2:4"
            },
            "returnParameters": {
              "id": 1204,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1203,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1224,
                  "src": "2085:12:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1202,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2085:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2084:14:4"
            },
            "scope": 1263,
            "src": "2027:156:4",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1245,
              "nodeType": "Block",
              "src": "2265:55:4",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 1243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "expression": {
                          "id": 1235,
                          "name": "b",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1227,
                          "src": "2282:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Board_$1062_memory_ptr",
                            "typeString": "struct TicTacToeRules.Board memory"
                          }
                        },
                        "id": 1236,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2284:5:4",
                        "memberName": "cells",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1057,
                        "src": "2282:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$9_memory_ptr",
                          "typeString": "uint8[9] memory"
                        }
                      },
                      "id": 1241,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 1239,
                            "name": "move",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1230,
                            "src": "2302:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_Move_$1064",
                              "typeString": "TicTacToeRules.Move"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_userDefinedValueType$_Move_$1064",
                              "typeString": "TicTacToeRules.Move"
                            }
                          ],
                          "expression": {
                            "id": 1237,
                            "name": "Move",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1064,
                            "src": "2290:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_userDefinedValueType$_Move_$1064_$",
                              "typeString": "type(TicTacToeRules.Move)"
                            }
                          },
                          "id": 1238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2295:6:4",
                          "memberName": "unwrap",
                          "nodeType": "MemberAccess",
                          "src": "2290:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_Move_$1064_$returns$_t_uint8_$",
                            "typeString": "function (TicTacToeRules.Move) pure returns (uint8)"
                          }
                        },
                        "id": 1240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2290:17:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2282:26:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1242,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2312:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2282:31:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1234,
                  "id": 1244,
                  "nodeType": "Return",
                  "src": "2275:38:4"
                }
              ]
            },
            "id": 1246,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isCellEmpty",
            "nameLocation": "2198:11:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1231,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1227,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "2223:1:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1246,
                  "src": "2210:14:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Board_$1062_memory_ptr",
                    "typeString": "struct TicTacToeRules.Board"
                  },
                  "typeName": {
                    "id": 1226,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1225,
                      "name": "Board",
                      "nameLocations": ["2210:5:4"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1062,
                      "src": "2210:5:4"
                    },
                    "referencedDeclaration": 1062,
                    "src": "2210:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Board_$1062_storage_ptr",
                      "typeString": "struct TicTacToeRules.Board"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1230,
                  "mutability": "mutable",
                  "name": "move",
                  "nameLocation": "2231:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1246,
                  "src": "2226:9:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Move_$1064",
                    "typeString": "TicTacToeRules.Move"
                  },
                  "typeName": {
                    "id": 1229,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1228,
                      "name": "Move",
                      "nameLocations": ["2226:4:4"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1064,
                      "src": "2226:4:4"
                    },
                    "referencedDeclaration": 1064,
                    "src": "2226:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Move_$1064",
                      "typeString": "TicTacToeRules.Move"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2209:27:4"
            },
            "returnParameters": {
              "id": 1234,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1233,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1246,
                  "src": "2259:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1232,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2259:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2258:6:4"
            },
            "scope": 1263,
            "src": "2189:131:4",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1261,
              "nodeType": "Block",
              "src": "2392:45:4",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 1259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 1256,
                          "name": "move",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1249,
                          "src": "2421:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_Move_$1064",
                            "typeString": "TicTacToeRules.Move"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_userDefinedValueType$_Move_$1064",
                            "typeString": "TicTacToeRules.Move"
                          }
                        ],
                        "expression": {
                          "id": 1254,
                          "name": "Move",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1064,
                          "src": "2409:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_userDefinedValueType$_Move_$1064_$",
                            "typeString": "type(TicTacToeRules.Move)"
                          }
                        },
                        "id": 1255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2414:6:4",
                        "memberName": "unwrap",
                        "nodeType": "MemberAccess",
                        "src": "2409:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_Move_$1064_$returns$_t_uint8_$",
                          "typeString": "function (TicTacToeRules.Move) pure returns (uint8)"
                        }
                      },
                      "id": 1257,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2409:17:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "39",
                      "id": 1258,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2429:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_9_by_1",
                        "typeString": "int_const 9"
                      },
                      "value": "9"
                    },
                    "src": "2409:21:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1253,
                  "id": 1260,
                  "nodeType": "Return",
                  "src": "2402:28:4"
                }
              ]
            },
            "id": 1262,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isMoveWithinRange",
            "nameLocation": "2336:17:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1250,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1249,
                  "mutability": "mutable",
                  "name": "move",
                  "nameLocation": "2359:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1262,
                  "src": "2354:9:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Move_$1064",
                    "typeString": "TicTacToeRules.Move"
                  },
                  "typeName": {
                    "id": 1248,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1247,
                      "name": "Move",
                      "nameLocations": ["2354:4:4"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1064,
                      "src": "2354:4:4"
                    },
                    "referencedDeclaration": 1064,
                    "src": "2354:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Move_$1064",
                      "typeString": "TicTacToeRules.Move"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2353:11:4"
            },
            "returnParameters": {
              "id": 1253,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1252,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1262,
                  "src": "2387:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1251,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2387:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2386:6:4"
            },
            "scope": 1263,
            "src": "2327:110:4",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 1264,
        "src": "952:1487:4",
        "usedErrors": []
      }
    ],
    "src": "443:1996:4"
  },
  "bytecode": "608060405234801561001057600080fd5b50610670806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80630bf9ae69146100465780634ace4cfb1461006e5780638f5afe2f1461008e575b600080fd5b6100596100543660046102df565b6100a3565b60405190151581526020015b60405180910390f35b61008161007c3660046102df565b610135565b60405161006591906103d0565b61009661021b565b6040516100659190610407565b6000806100b36040870187610421565b8101906100c091906104e2565b905060006100d084860186610576565b905080600060ff88166100e8600260208c0135610591565b1490508080156100fa57508360200151155b801561010857508360400151155b80156101175750600960ff8316105b80156101285750610128848361029e565b9998505050505050505050565b61015960405180606001604052806000815260200160008152602001606081525090565b60006101686040870187610421565b81019061017591906104e2565b9050600061018584860186610576565b905061019660026020890135610591565b6101a19060016105b3565b825160ff8316600981106101b7576101b76105d4565b60ff9092166020928302919091015260408051606081019091528835815290818101906101e8908a013560016105b3565b8152602001836040516020016101fe91906105ea565b60408051601f198184030181529190529052979650505050505050565b6040805161018081018252600060608281018281526080840183905260a0840183905260c0840183905260e0840183905261010084018390526101208401839052610140840183905261016084018390528352602080840183905283850192909252925161028a9291016105ea565b604051602081830303815290604052905090565b815160009060ff8316600981106102b7576102b76105d4565b602002015160ff161590505b92915050565b803560ff811681146102da57600080fd5b919050565b600080600080606085870312156102f557600080fd5b843567ffffffffffffffff8082111561030d57600080fd5b908601906060828903121561032157600080fd5b819550610330602088016102c9565b9450604087013591508082111561034657600080fd5b818701915087601f83011261035a57600080fd5b81358181111561036957600080fd5b88602082850101111561037b57600080fd5b95989497505060200194505050565b6000815180845260005b818110156103b057602081850181015186830182015201610394565b506000602082860101526020601f19601f83011685010191505092915050565b602081528151602082015260208201516040820152600060408301516060808401526103ff608084018261038a565b949350505050565b60208152600061041a602083018461038a565b9392505050565b6000808335601e1984360301811261043857600080fd5b83018035915067ffffffffffffffff82111561045357600080fd5b60200191503681900382131561046857600080fd5b9250929050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff811182821017156104a8576104a861046f565b60405290565b604051610120810167ffffffffffffffff811182821017156104a8576104a861046f565b803580151581146102da57600080fd5b600061016082840312156104f557600080fd5b6104fd610485565b83601f84011261050c57600080fd5b6105146104ae565b8061012085018681111561052757600080fd5b855b818110156105485761053a816102c9565b845260209384019301610529565b50818452610555816104d2565b602085015250505061056a61014084016104d2565b60408201529392505050565b60006020828403121561058857600080fd5b61041a826102c9565b6000826105ae57634e487b7160e01b600052601260045260246000fd5b500690565b808201808211156102c357634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b81516101608201908260005b600981101561061857825160ff168252602092830192909101906001016105f6565b505050602083015115156101208301526040909201511515610140909101529056fea2646970667358221220bfc15678647b9411a1df6e790ab23807f350589332928d1b73248b0a3612ccd964736f6c63430008110033",
  "bytecodeSha1": "5107d50d36639dc50eba52537a377485a1fea568",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.17+commit.8df45f5f"
  },
  "contractName": "TicTacToeRules",
  "coverageMap": {
    "branches": {
      "4": {},
      "6": {}
    },
    "statements": {
      "4": {
        "TicTacToeRules.defaultInitialGameState": {
          "4": [2109, 2176]
        },
        "TicTacToeRules.isCellEmpty": {
          "5": [2275, 2313]
        },
        "TicTacToeRules.isMoveWithinRange": {
          "1": [2402, 2430]
        },
        "TicTacToeRules.isValidMove": {
          "0": [1509, 1614]
        },
        "TicTacToeRules.transition": {
          "2": [1887, 1932],
          "3": [1942, 2014]
        }
      },
      "6": {}
    }
  },
  "dependencies": ["IGameJutsuRules"],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100415760003560e01c80630bf9ae69146100465780634ace4cfb1461006e5780638f5afe2f1461008e575b600080fd5b6100596100543660046102df565b6100a3565b60405190151581526020015b60405180910390f35b61008161007c3660046102df565b610135565b60405161006591906103d0565b61009661021b565b6040516100659190610407565b6000806100b36040870187610421565b8101906100c091906104e2565b905060006100d084860186610576565b905080600060ff88166100e8600260208c0135610591565b1490508080156100fa57508360200151155b801561010857508360400151155b80156101175750600960ff8316105b80156101285750610128848361029e565b9998505050505050505050565b61015960405180606001604052806000815260200160008152602001606081525090565b60006101686040870187610421565b81019061017591906104e2565b9050600061018584860186610576565b905061019660026020890135610591565b6101a19060016105b3565b825160ff8316600981106101b7576101b76105d4565b60ff9092166020928302919091015260408051606081019091528835815290818101906101e8908a013560016105b3565b8152602001836040516020016101fe91906105ea565b60408051601f198184030181529190529052979650505050505050565b6040805161018081018252600060608281018281526080840183905260a0840183905260c0840183905260e0840183905261010084018390526101208401839052610140840183905261016084018390528352602080840183905283850192909252925161028a9291016105ea565b604051602081830303815290604052905090565b815160009060ff8316600981106102b7576102b76105d4565b602002015160ff161590505b92915050565b803560ff811681146102da57600080fd5b919050565b600080600080606085870312156102f557600080fd5b843567ffffffffffffffff8082111561030d57600080fd5b908601906060828903121561032157600080fd5b819550610330602088016102c9565b9450604087013591508082111561034657600080fd5b818701915087601f83011261035a57600080fd5b81358181111561036957600080fd5b88602082850101111561037b57600080fd5b95989497505060200194505050565b6000815180845260005b818110156103b057602081850181015186830182015201610394565b506000602082860101526020601f19601f83011685010191505092915050565b602081528151602082015260208201516040820152600060408301516060808401526103ff608084018261038a565b949350505050565b60208152600061041a602083018461038a565b9392505050565b6000808335601e1984360301811261043857600080fd5b83018035915067ffffffffffffffff82111561045357600080fd5b60200191503681900382131561046857600080fd5b9250929050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff811182821017156104a8576104a861046f565b60405290565b604051610120810167ffffffffffffffff811182821017156104a8576104a861046f565b803580151581146102da57600080fd5b600061016082840312156104f557600080fd5b6104fd610485565b83601f84011261050c57600080fd5b6105146104ae565b8061012085018681111561052757600080fd5b855b818110156105485761053a816102c9565b845260209384019301610529565b50818452610555816104d2565b602085015250505061056a61014084016104d2565b60408201529392505050565b60006020828403121561058857600080fd5b61041a826102c9565b6000826105ae57634e487b7160e01b600052601260045260246000fd5b500690565b808201808211156102c357634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b81516101608201908260005b600981101561061857825160ff168252602092830192909101906001016105f6565b505050602083015115156101208301526040909201511515610140909101529056fea2646970667358221220bfc15678647b9411a1df6e790ab23807f350589332928d1b73248b0a3612ccd964736f6c63430008110033",
  "deployedSourceMap": "952:1487:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1159:462;;;;;;:::i;:::-;;:::i;:::-;;;1272:14:7;;1265:22;1247:41;;1235:2;1220:18;1159:462:4;;;;;;;;1627:394;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2027:156::-;;;:::i;:::-;;;;;;;:::i;1159:462::-;1281:4;;1325:16;;;;:10;:16;:::i;:::-;1314:37;;;;;;;:::i;:::-;1297:54;-1:-1:-1;1361:8:4;1372:26;;;;1383:5;1372:26;:::i;:::-;1361:37;-1:-1:-1;1361:37:4;1408:6;1467:32;;;:20;1486:1;1467:16;;;;:20;:::i;:::-;:32;1440:59;;1516:19;:36;;;;;1540:1;:12;;;1539:13;1516:36;:53;;;;;1557:1;:12;;;1556:13;1516:53;:77;;;;-1:-1:-1;2429:1:4;2409:21;;;;1573:20;1516:98;;;;;1597:17;1609:1;1612;1597:11;:17::i;:::-;1509:105;1159:462;-1:-1:-1;;;;;;;;;1159:462:4:o;1627:394::-;1748:16;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;1748:16:4;1776:14;1804:16;;;;:10;:16;:::i;:::-;1793:37;;;;;;;:::i;:::-;1776:54;-1:-1:-1;1840:8:4;1851:26;;;;1862:5;1851:26;:::i;:::-;1840:37;-1:-1:-1;1911:20:4;1930:1;1911:16;;;;:20;:::i;:::-;1907:24;;:1;:24;:::i;:::-;1887:7;;:11;;;;;;;;;;:::i;:::-;:45;;;;:11;;;;;;;;:45;1949:65;;;;;;;;;1959:17;;1949:65;;;;;;;1978:20;;:16;;;1997:1;1978:20;:::i;:::-;1949:65;;;;2011:1;2000:13;;;;;;;;:::i;:::-;;;;-1:-1:-1;;2000:13:4;;;;;;;;;1949:65;;1942:72;1627:394;-1:-1:-1;;;;;;;1627:394:4:o;2027:156::-;2127:48;;;;;;;;-1:-1:-1;2085:12:4;2127:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2116:60;;;;2127:48;2116:60;;:::i;:::-;;;;;;;;;;;;;2109:67;;2027:156;:::o;2189:131::-;2282:7;;2259:4;;2282:26;;;;;;;;;;:::i;:::-;;;;;:31;;;;-1:-1:-1;2189:131:4;;;;;:::o;14:156:7:-;80:20;;140:4;129:16;;119:27;;109:55;;160:1;157;150:12;109:55;14:156;;;:::o;175:927::-;290:6;298;306;314;367:2;355:9;346:7;342:23;338:32;335:52;;;383:1;380;373:12;335:52;423:9;410:23;452:18;493:2;485:6;482:14;479:34;;;509:1;506;499:12;479:34;532:22;;;;588:2;570:16;;;566:25;563:45;;;604:1;601;594:12;563:45;627:2;617:12;;648:36;680:2;669:9;665:18;648:36;:::i;:::-;638:46;;737:2;726:9;722:18;709:32;693:48;;766:2;756:8;753:16;750:36;;;782:1;779;772:12;750:36;820:8;809:9;805:24;795:34;;867:7;860:4;856:2;852:13;848:27;838:55;;889:1;886;879:12;838:55;929:2;916:16;955:2;947:6;944:14;941:34;;;971:1;968;961:12;941:34;1016:7;1011:2;1002:6;998:2;994:15;990:24;987:37;984:57;;;1037:1;1034;1027:12;984:57;175:927;;;;-1:-1:-1;;1068:2:7;1060:11;;-1:-1:-1;;;175:927:7:o;1299:422::-;1340:3;1378:5;1372:12;1405:6;1400:3;1393:19;1430:1;1440:162;1454:6;1451:1;1448:13;1440:162;;;1516:4;1572:13;;;1568:22;;1562:29;1544:11;;;1540:20;;1533:59;1469:12;1440:162;;;1444:3;1647:1;1640:4;1631:6;1626:3;1622:16;1618:27;1611:38;1710:4;1703:2;1699:7;1694:2;1686:6;1682:15;1678:29;1673:3;1669:39;1665:50;1658:57;;;1299:422;;;;:::o;1726:463::-;1909:2;1898:9;1891:21;1954:6;1948:13;1943:2;1932:9;1928:18;1921:41;2016:2;2008:6;2004:15;1998:22;1993:2;1982:9;1978:18;1971:50;1872:4;2068:2;2060:6;2056:15;2050:22;2110:4;2103;2092:9;2088:20;2081:34;2132:51;2178:3;2167:9;2163:19;2149:12;2132:51;:::i;:::-;2124:59;1726:463;-1:-1:-1;;;;1726:463:7:o;2194:217::-;2341:2;2330:9;2323:21;2304:4;2361:44;2401:2;2390:9;2386:18;2378:6;2361:44;:::i;:::-;2353:52;2194:217;-1:-1:-1;;;2194:217:7:o;2416:521::-;2493:4;2499:6;2559:11;2546:25;2653:2;2649:7;2638:8;2622:14;2618:29;2614:43;2594:18;2590:68;2580:96;;2672:1;2669;2662:12;2580:96;2699:33;;2751:20;;;-1:-1:-1;2794:18:7;2783:30;;2780:50;;;2826:1;2823;2816:12;2780:50;2859:4;2847:17;;-1:-1:-1;2890:14:7;2886:27;;;2876:38;;2873:58;;;2927:1;2924;2917:12;2873:58;2416:521;;;;;:::o;2942:127::-;3003:10;2998:3;2994:20;2991:1;2984:31;3034:4;3031:1;3024:15;3058:4;3055:1;3048:15;3074:248;3141:2;3135:9;3183:4;3171:17;;3218:18;3203:34;;3239:22;;;3200:62;3197:88;;;3265:18;;:::i;:::-;3301:2;3294:22;3074:248;:::o;3327:252::-;3399:2;3393:9;3441:3;3429:16;;3475:18;3460:34;;3496:22;;;3457:62;3454:88;;;3522:18;;:::i;3584:160::-;3649:20;;3705:13;;3698:21;3688:32;;3678:60;;3734:1;3731;3724:12;3749:799;3831:6;3884:3;3872:9;3863:7;3859:23;3855:33;3852:53;;;3901:1;3898;3891:12;3852:53;3927:17;;:::i;:::-;3989:7;3982:4;3971:9;3967:20;3963:34;3953:62;;4011:1;4008;4001:12;3953:62;4035:22;;:::i;:::-;4079:3;4120;4109:9;4105:19;4147:7;4139:6;4136:19;4133:39;;;4168:1;4165;4158:12;4133:39;4192:9;4210:150;4226:6;4221:3;4218:15;4210:150;;;4294:21;4311:3;4294:21;:::i;:::-;4282:34;;4345:4;4336:14;;;;4243;4210:150;;;4214:3;4383:5;4376;4369:20;4423:23;4439:6;4423:23;:::i;:::-;4416:4;4409:5;4405:16;4398:49;;;;4481:36;4512:3;4501:9;4497:19;4481:36;:::i;:::-;4474:4;4463:16;;4456:62;4467:5;3749:799;-1:-1:-1;;;3749:799:7:o;4553:182::-;4610:6;4663:2;4651:9;4642:7;4638:23;4634:32;4631:52;;;4679:1;4676;4669:12;4631:52;4702:27;4719:9;4702:27;:::i;4740:209::-;4772:1;4798;4788:132;;4842:10;4837:3;4833:20;4830:1;4823:31;4877:4;4874:1;4867:15;4905:4;4902:1;4895:15;4788:132;-1:-1:-1;4934:9:7;;4740:209::o;4954:222::-;5019:9;;;5040:10;;;5037:133;;;5092:10;5087:3;5083:20;5080:1;5073:31;5127:4;5124:1;5117:15;5155:4;5152:1;5145:15;5181:127;5242:10;5237:3;5233:20;5230:1;5223:31;5273:4;5270:1;5263:15;5297:4;5294:1;5287:15;5313:696;5516:13;;5493:3;5478:19;;;5482:9;5451:4;5636:205;5650:4;5647:1;5644:11;5636:205;;;5713:13;;5728:4;5709:24;5697:37;;5757:4;5816:15;;;;5781:12;;;;5670:1;5663:9;5636:205;;;-1:-1:-1;;;5913:4:7;5901:17;;5895:24;5888:32;5881:40;5872:6;5857:22;;5850:72;5994:4;5982:17;;;5976:24;5969:32;5962:40;5953:6;5938:22;;;5931:72;5313:696;:::o",
  "language": "Solidity",
  "natspec": {
    "author": "Gene A. Tsvigun",
    "details": "The state encodes the board as a 3x3 array of uint8s with 0 for empty, 1 for X, and 2 for Oexplicitly keeping wins as `bool crossesWin` and `bool noughtsWin`",
    "kind": "dev",
    "methods": {},
    "notice": "Our take on the classic game, rules defined on-chain to never be checkedexcept by the arbiter when a dispute arises.ETHOnline2022 submission by ChainHackers",
    "title": "TicTacToe Rules",
    "version": 1
  },
  "offset": [952, 2439],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBF9AE69 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x4ACE4CFB EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0x8F5AFE2F EQ PUSH2 0x8E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0x54 CALLDATASIZE PUSH1 0x4 PUSH2 0x2DF JUMP JUMPDEST PUSH2 0xA3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x81 PUSH2 0x7C CALLDATASIZE PUSH1 0x4 PUSH2 0x2DF JUMP JUMPDEST PUSH2 0x135 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x3D0 JUMP JUMPDEST PUSH2 0x96 PUSH2 0x21B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x407 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB3 PUSH1 0x40 DUP8 ADD DUP8 PUSH2 0x421 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x4E2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xD0 DUP5 DUP7 ADD DUP7 PUSH2 0x576 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 PUSH1 0xFF DUP9 AND PUSH2 0xE8 PUSH1 0x2 PUSH1 0x20 DUP13 ADD CALLDATALOAD PUSH2 0x591 JUMP JUMPDEST EQ SWAP1 POP DUP1 DUP1 ISZERO PUSH2 0xFA JUMPI POP DUP4 PUSH1 0x20 ADD MLOAD ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x108 JUMPI POP DUP4 PUSH1 0x40 ADD MLOAD ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x117 JUMPI POP PUSH1 0x9 PUSH1 0xFF DUP4 AND LT JUMPDEST DUP1 ISZERO PUSH2 0x128 JUMPI POP PUSH2 0x128 DUP5 DUP4 PUSH2 0x29E JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x159 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x168 PUSH1 0x40 DUP8 ADD DUP8 PUSH2 0x421 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x175 SWAP2 SWAP1 PUSH2 0x4E2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x185 DUP5 DUP7 ADD DUP7 PUSH2 0x576 JUMP JUMPDEST SWAP1 POP PUSH2 0x196 PUSH1 0x2 PUSH1 0x20 DUP10 ADD CALLDATALOAD PUSH2 0x591 JUMP JUMPDEST PUSH2 0x1A1 SWAP1 PUSH1 0x1 PUSH2 0x5B3 JUMP JUMPDEST DUP3 MLOAD PUSH1 0xFF DUP4 AND PUSH1 0x9 DUP2 LT PUSH2 0x1B7 JUMPI PUSH2 0x1B7 PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0xFF SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP2 MSTORE DUP9 CALLDATALOAD DUP2 MSTORE SWAP1 DUP2 DUP2 ADD SWAP1 PUSH2 0x1E8 SWAP1 DUP11 ADD CALLDATALOAD PUSH1 0x1 PUSH2 0x5B3 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0x5EA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE SWAP1 MSTORE SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x180 DUP2 ADD DUP3 MSTORE PUSH1 0x0 PUSH1 0x60 DUP3 DUP2 ADD DUP3 DUP2 MSTORE PUSH1 0x80 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0xC0 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0xE0 DUP5 ADD DUP4 SWAP1 MSTORE PUSH2 0x100 DUP5 ADD DUP4 SWAP1 MSTORE PUSH2 0x120 DUP5 ADD DUP4 SWAP1 MSTORE PUSH2 0x140 DUP5 ADD DUP4 SWAP1 MSTORE PUSH2 0x160 DUP5 ADD DUP4 SWAP1 MSTORE DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 ADD DUP4 SWAP1 MSTORE DUP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP3 MLOAD PUSH2 0x28A SWAP3 SWAP2 ADD PUSH2 0x5EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF DUP4 AND PUSH1 0x9 DUP2 LT PUSH2 0x2B7 JUMPI PUSH2 0x2B7 PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0xFF AND ISZERO SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x30D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP7 ADD SWAP1 PUSH1 0x60 DUP3 DUP10 SUB SLT ISZERO PUSH2 0x321 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 SWAP6 POP PUSH2 0x330 PUSH1 0x20 DUP9 ADD PUSH2 0x2C9 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x346 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x35A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x369 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x37B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP POP PUSH1 0x20 ADD SWAP5 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3B0 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x394 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 DUP1 DUP5 ADD MSTORE PUSH2 0x3FF PUSH1 0x80 DUP5 ADD DUP3 PUSH2 0x38A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x41A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x38A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x438 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x453 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0x468 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x4A8 JUMPI PUSH2 0x4A8 PUSH2 0x46F JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x120 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x4A8 JUMPI PUSH2 0x4A8 PUSH2 0x46F JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4FD PUSH2 0x485 JUMP JUMPDEST DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x50C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x514 PUSH2 0x4AE JUMP JUMPDEST DUP1 PUSH2 0x120 DUP6 ADD DUP7 DUP2 GT ISZERO PUSH2 0x527 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x548 JUMPI PUSH2 0x53A DUP2 PUSH2 0x2C9 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 ADD PUSH2 0x529 JUMP JUMPDEST POP DUP2 DUP5 MSTORE PUSH2 0x555 DUP2 PUSH2 0x4D2 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE POP POP POP PUSH2 0x56A PUSH2 0x140 DUP5 ADD PUSH2 0x4D2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x588 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x41A DUP3 PUSH2 0x2C9 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x5AE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MOD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2C3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x160 DUP3 ADD SWAP1 DUP3 PUSH1 0x0 JUMPDEST PUSH1 0x9 DUP2 LT ISZERO PUSH2 0x618 JUMPI DUP3 MLOAD PUSH1 0xFF AND DUP3 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x5F6 JUMP JUMPDEST POP POP POP PUSH1 0x20 DUP4 ADD MLOAD ISZERO ISZERO PUSH2 0x120 DUP4 ADD MSTORE PUSH1 0x40 SWAP1 SWAP3 ADD MLOAD ISZERO ISZERO PUSH2 0x140 SWAP1 SWAP2 ADD MSTORE SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF 0xC1 JUMP PUSH25 0x647B9411A1DF6E790AB23807F350589332928D1B73248B0A36 SLT 0xCC 0xD9 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [952, 2439],
      "op": "PUSH1",
      "path": "4",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [952, 2439],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [952, 2439],
      "op": "MSTORE",
      "path": "4"
    },
    "5": {
      "fn": null,
      "offset": [952, 2439],
      "op": "CALLVALUE",
      "path": "4"
    },
    "6": {
      "fn": null,
      "offset": [952, 2439],
      "op": "DUP1",
      "path": "4"
    },
    "7": {
      "fn": null,
      "offset": [952, 2439],
      "op": "ISZERO",
      "path": "4"
    },
    "8": {
      "fn": null,
      "offset": [952, 2439],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [952, 2439],
      "op": "JUMPI",
      "path": "4"
    },
    "12": {
      "fn": null,
      "offset": [952, 2439],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [952, 2439],
      "op": "DUP1",
      "path": "4"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [952, 2439],
      "op": "REVERT",
      "path": "4"
    },
    "16": {
      "fn": null,
      "offset": [952, 2439],
      "op": "JUMPDEST",
      "path": "4"
    },
    "17": {
      "fn": null,
      "offset": [952, 2439],
      "op": "POP",
      "path": "4"
    },
    "18": {
      "fn": null,
      "offset": [952, 2439],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [952, 2439],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "21": {
      "fn": null,
      "offset": [952, 2439],
      "op": "LT",
      "path": "4"
    },
    "22": {
      "fn": null,
      "offset": [952, 2439],
      "op": "PUSH2",
      "path": "4",
      "value": "0x41"
    },
    "25": {
      "fn": null,
      "offset": [952, 2439],
      "op": "JUMPI",
      "path": "4"
    },
    "26": {
      "fn": null,
      "offset": [952, 2439],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [952, 2439],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "29": {
      "fn": null,
      "offset": [952, 2439],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [952, 2439],
      "op": "SHR",
      "path": "4"
    },
    "32": {
      "fn": null,
      "offset": [952, 2439],
      "op": "DUP1",
      "path": "4"
    },
    "33": {
      "fn": null,
      "offset": [952, 2439],
      "op": "PUSH4",
      "path": "4",
      "value": "0xBF9AE69"
    },
    "38": {
      "fn": null,
      "offset": [952, 2439],
      "op": "EQ",
      "path": "4"
    },
    "39": {
      "fn": null,
      "offset": [952, 2439],
      "op": "PUSH2",
      "path": "4",
      "value": "0x46"
    },
    "42": {
      "fn": null,
      "offset": [952, 2439],
      "op": "JUMPI",
      "path": "4"
    },
    "43": {
      "fn": null,
      "offset": [952, 2439],
      "op": "DUP1",
      "path": "4"
    },
    "44": {
      "fn": null,
      "offset": [952, 2439],
      "op": "PUSH4",
      "path": "4",
      "value": "0x4ACE4CFB"
    },
    "49": {
      "fn": null,
      "offset": [952, 2439],
      "op": "EQ",
      "path": "4"
    },
    "50": {
      "fn": null,
      "offset": [952, 2439],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6E"
    },
    "53": {
      "fn": null,
      "offset": [952, 2439],
      "op": "JUMPI",
      "path": "4"
    },
    "54": {
      "fn": null,
      "offset": [952, 2439],
      "op": "DUP1",
      "path": "4"
    },
    "55": {
      "fn": null,
      "offset": [952, 2439],
      "op": "PUSH4",
      "path": "4",
      "value": "0x8F5AFE2F"
    },
    "60": {
      "fn": null,
      "offset": [952, 2439],
      "op": "EQ",
      "path": "4"
    },
    "61": {
      "fn": null,
      "offset": [952, 2439],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8E"
    },
    "64": {
      "fn": null,
      "offset": [952, 2439],
      "op": "JUMPI",
      "path": "4"
    },
    "65": {
      "fn": null,
      "offset": [952, 2439],
      "op": "JUMPDEST",
      "path": "4"
    },
    "66": {
      "fn": null,
      "offset": [952, 2439],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "68": {
      "fn": null,
      "offset": [952, 2439],
      "op": "DUP1",
      "path": "4"
    },
    "69": {
      "first_revert": true,
      "fn": null,
      "offset": [952, 2439],
      "op": "REVERT",
      "path": "4"
    },
    "70": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1159, 1621],
      "op": "JUMPDEST",
      "path": "4"
    },
    "71": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1159, 1621],
      "op": "PUSH2",
      "path": "4",
      "value": "0x59"
    },
    "74": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1159, 1621],
      "op": "PUSH2",
      "path": "4",
      "value": "0x54"
    },
    "77": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1159, 1621],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "78": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1159, 1621],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "80": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1159, 1621],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2DF"
    },
    "83": {
      "fn": "TicTacToeRules.isValidMove",
      "jump": "i",
      "offset": [1159, 1621],
      "op": "JUMP",
      "path": "4"
    },
    "84": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1159, 1621],
      "op": "JUMPDEST",
      "path": "4"
    },
    "85": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1159, 1621],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA3"
    },
    "88": {
      "fn": "TicTacToeRules.isValidMove",
      "jump": "i",
      "offset": [1159, 1621],
      "op": "JUMP",
      "path": "4"
    },
    "89": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1159, 1621],
      "op": "JUMPDEST",
      "path": "4"
    },
    "90": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1159, 1621],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "92": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1159, 1621],
      "op": "MLOAD",
      "path": "4"
    },
    "93": {
      "op": "SWAP1"
    },
    "94": {
      "op": "ISZERO"
    },
    "95": {
      "op": "ISZERO"
    },
    "96": {
      "op": "DUP2"
    },
    "97": {
      "op": "MSTORE"
    },
    "98": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "100": {
      "op": "ADD"
    },
    "101": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1159, 1621],
      "op": "JUMPDEST",
      "path": "4"
    },
    "102": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1159, 1621],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "104": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1159, 1621],
      "op": "MLOAD",
      "path": "4"
    },
    "105": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1159, 1621],
      "op": "DUP1",
      "path": "4"
    },
    "106": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1159, 1621],
      "op": "SWAP2",
      "path": "4"
    },
    "107": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1159, 1621],
      "op": "SUB",
      "path": "4"
    },
    "108": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1159, 1621],
      "op": "SWAP1",
      "path": "4"
    },
    "109": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1159, 1621],
      "op": "RETURN",
      "path": "4"
    },
    "110": {
      "fn": "TicTacToeRules.transition",
      "offset": [1627, 2021],
      "op": "JUMPDEST",
      "path": "4"
    },
    "111": {
      "fn": "TicTacToeRules.transition",
      "offset": [1627, 2021],
      "op": "PUSH2",
      "path": "4",
      "value": "0x81"
    },
    "114": {
      "fn": "TicTacToeRules.transition",
      "offset": [1627, 2021],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7C"
    },
    "117": {
      "fn": "TicTacToeRules.transition",
      "offset": [1627, 2021],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "118": {
      "fn": "TicTacToeRules.transition",
      "offset": [1627, 2021],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "120": {
      "fn": "TicTacToeRules.transition",
      "offset": [1627, 2021],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2DF"
    },
    "123": {
      "fn": "TicTacToeRules.transition",
      "jump": "i",
      "offset": [1627, 2021],
      "op": "JUMP",
      "path": "4"
    },
    "124": {
      "fn": "TicTacToeRules.transition",
      "offset": [1627, 2021],
      "op": "JUMPDEST",
      "path": "4"
    },
    "125": {
      "fn": "TicTacToeRules.transition",
      "offset": [1627, 2021],
      "op": "PUSH2",
      "path": "4",
      "value": "0x135"
    },
    "128": {
      "fn": "TicTacToeRules.transition",
      "jump": "i",
      "offset": [1627, 2021],
      "op": "JUMP",
      "path": "4"
    },
    "129": {
      "fn": "TicTacToeRules.transition",
      "offset": [1627, 2021],
      "op": "JUMPDEST",
      "path": "4"
    },
    "130": {
      "fn": "TicTacToeRules.transition",
      "offset": [1627, 2021],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "132": {
      "fn": "TicTacToeRules.transition",
      "offset": [1627, 2021],
      "op": "MLOAD",
      "path": "4"
    },
    "133": {
      "fn": "TicTacToeRules.transition",
      "offset": [1627, 2021],
      "op": "PUSH2",
      "path": "4",
      "value": "0x65"
    },
    "136": {
      "fn": "TicTacToeRules.transition",
      "offset": [1627, 2021],
      "op": "SWAP2",
      "path": "4"
    },
    "137": {
      "fn": "TicTacToeRules.transition",
      "offset": [1627, 2021],
      "op": "SWAP1",
      "path": "4"
    },
    "138": {
      "fn": "TicTacToeRules.transition",
      "offset": [1627, 2021],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3D0"
    },
    "141": {
      "fn": "TicTacToeRules.transition",
      "jump": "i",
      "offset": [1627, 2021],
      "op": "JUMP",
      "path": "4"
    },
    "142": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2027, 2183],
      "op": "JUMPDEST",
      "path": "4"
    },
    "143": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2027, 2183],
      "op": "PUSH2",
      "path": "4",
      "value": "0x96"
    },
    "146": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2027, 2183],
      "op": "PUSH2",
      "path": "4",
      "value": "0x21B"
    },
    "149": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "jump": "i",
      "offset": [2027, 2183],
      "op": "JUMP",
      "path": "4"
    },
    "150": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2027, 2183],
      "op": "JUMPDEST",
      "path": "4"
    },
    "151": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2027, 2183],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "153": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2027, 2183],
      "op": "MLOAD",
      "path": "4"
    },
    "154": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2027, 2183],
      "op": "PUSH2",
      "path": "4",
      "value": "0x65"
    },
    "157": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2027, 2183],
      "op": "SWAP2",
      "path": "4"
    },
    "158": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2027, 2183],
      "op": "SWAP1",
      "path": "4"
    },
    "159": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2027, 2183],
      "op": "PUSH2",
      "path": "4",
      "value": "0x407"
    },
    "162": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "jump": "i",
      "offset": [2027, 2183],
      "op": "JUMP",
      "path": "4"
    },
    "163": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1159, 1621],
      "op": "JUMPDEST",
      "path": "4"
    },
    "164": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1281, 1285],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "166": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1281, 1285],
      "op": "DUP1",
      "path": "4"
    },
    "167": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1325, 1341],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB3"
    },
    "170": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1325, 1341],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "172": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1325, 1341],
      "op": "DUP8",
      "path": "4"
    },
    "173": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1325, 1341],
      "op": "ADD",
      "path": "4"
    },
    "174": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1325, 1335],
      "op": "DUP8",
      "path": "4"
    },
    "175": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1325, 1341],
      "op": "PUSH2",
      "path": "4",
      "value": "0x421"
    },
    "178": {
      "fn": "TicTacToeRules.isValidMove",
      "jump": "i",
      "offset": [1325, 1341],
      "op": "JUMP",
      "path": "4"
    },
    "179": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1325, 1341],
      "op": "JUMPDEST",
      "path": "4"
    },
    "180": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1314, 1351],
      "op": "DUP2",
      "path": "4"
    },
    "181": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1314, 1351],
      "op": "ADD",
      "path": "4"
    },
    "182": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1314, 1351],
      "op": "SWAP1",
      "path": "4"
    },
    "183": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1314, 1351],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC0"
    },
    "186": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1314, 1351],
      "op": "SWAP2",
      "path": "4"
    },
    "187": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1314, 1351],
      "op": "SWAP1",
      "path": "4"
    },
    "188": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1314, 1351],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4E2"
    },
    "191": {
      "fn": "TicTacToeRules.isValidMove",
      "jump": "i",
      "offset": [1314, 1351],
      "op": "JUMP",
      "path": "4"
    },
    "192": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1314, 1351],
      "op": "JUMPDEST",
      "path": "4"
    },
    "193": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1297, 1351],
      "op": "SWAP1",
      "path": "4"
    },
    "194": {
      "op": "POP"
    },
    "195": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1361, 1369],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "197": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1372, 1398],
      "op": "PUSH2",
      "path": "4",
      "value": "0xD0"
    },
    "200": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1372, 1398],
      "op": "DUP5",
      "path": "4"
    },
    "201": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1372, 1398],
      "op": "DUP7",
      "path": "4"
    },
    "202": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1372, 1398],
      "op": "ADD",
      "path": "4"
    },
    "203": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1383, 1388],
      "op": "DUP7",
      "path": "4"
    },
    "204": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1372, 1398],
      "op": "PUSH2",
      "path": "4",
      "value": "0x576"
    },
    "207": {
      "fn": "TicTacToeRules.isValidMove",
      "jump": "i",
      "offset": [1372, 1398],
      "op": "JUMP",
      "path": "4"
    },
    "208": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1372, 1398],
      "op": "JUMPDEST",
      "path": "4"
    },
    "209": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1361, 1398],
      "op": "SWAP1",
      "path": "4"
    },
    "210": {
      "op": "POP"
    },
    "211": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1361, 1398],
      "op": "DUP1",
      "path": "4"
    },
    "212": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1408, 1414],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "214": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1467, 1499],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "216": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1467, 1499],
      "op": "DUP9",
      "path": "4"
    },
    "217": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1467, 1499],
      "op": "AND",
      "path": "4"
    },
    "218": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1467, 1487],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE8"
    },
    "221": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1486, 1487],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "223": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1467, 1483],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "225": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1467, 1483],
      "op": "DUP13",
      "path": "4"
    },
    "226": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1467, 1483],
      "op": "ADD",
      "path": "4"
    },
    "227": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1467, 1483],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "228": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1467, 1487],
      "op": "PUSH2",
      "path": "4",
      "value": "0x591"
    },
    "231": {
      "fn": "TicTacToeRules.isValidMove",
      "jump": "i",
      "offset": [1467, 1487],
      "op": "JUMP",
      "path": "4"
    },
    "232": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1467, 1487],
      "op": "JUMPDEST",
      "path": "4"
    },
    "233": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1467, 1499],
      "op": "EQ",
      "path": "4"
    },
    "234": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1440, 1499],
      "op": "SWAP1",
      "path": "4"
    },
    "235": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1440, 1499],
      "op": "POP",
      "path": "4"
    },
    "236": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1516, 1535],
      "op": "DUP1",
      "path": "4",
      "statement": 0
    },
    "237": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1516, 1552],
      "op": "DUP1",
      "path": "4"
    },
    "238": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1516, 1552],
      "op": "ISZERO",
      "path": "4"
    },
    "239": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1516, 1552],
      "op": "PUSH2",
      "path": "4",
      "value": "0xFA"
    },
    "242": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1516, 1552],
      "op": "JUMPI",
      "path": "4"
    },
    "243": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1516, 1552],
      "op": "POP",
      "path": "4"
    },
    "244": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1540, 1541],
      "op": "DUP4",
      "path": "4"
    },
    "245": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1540, 1552],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "247": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1540, 1552],
      "op": "ADD",
      "path": "4"
    },
    "248": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1540, 1552],
      "op": "MLOAD",
      "path": "4"
    },
    "249": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1539, 1552],
      "op": "ISZERO",
      "path": "4"
    },
    "250": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1516, 1552],
      "op": "JUMPDEST",
      "path": "4"
    },
    "251": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1516, 1569],
      "op": "DUP1",
      "path": "4"
    },
    "252": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1516, 1569],
      "op": "ISZERO",
      "path": "4"
    },
    "253": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1516, 1569],
      "op": "PUSH2",
      "path": "4",
      "value": "0x108"
    },
    "256": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1516, 1569],
      "op": "JUMPI",
      "path": "4"
    },
    "257": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1516, 1569],
      "op": "POP",
      "path": "4"
    },
    "258": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1557, 1558],
      "op": "DUP4",
      "path": "4"
    },
    "259": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1557, 1569],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "261": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1557, 1569],
      "op": "ADD",
      "path": "4"
    },
    "262": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1557, 1569],
      "op": "MLOAD",
      "path": "4"
    },
    "263": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1556, 1569],
      "op": "ISZERO",
      "path": "4"
    },
    "264": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1516, 1569],
      "op": "JUMPDEST",
      "path": "4"
    },
    "265": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1516, 1593],
      "op": "DUP1",
      "path": "4"
    },
    "266": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1516, 1593],
      "op": "ISZERO",
      "path": "4"
    },
    "267": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1516, 1593],
      "op": "PUSH2",
      "path": "4",
      "value": "0x117"
    },
    "270": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1516, 1593],
      "op": "JUMPI",
      "path": "4"
    },
    "271": {
      "op": "POP"
    },
    "272": {
      "fn": "TicTacToeRules.isMoveWithinRange",
      "offset": [2429, 2430],
      "op": "PUSH1",
      "path": "4",
      "statement": 1,
      "value": "0x9"
    },
    "274": {
      "fn": "TicTacToeRules.isMoveWithinRange",
      "offset": [2409, 2430],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "276": {
      "fn": "TicTacToeRules.isMoveWithinRange",
      "offset": [2409, 2430],
      "op": "DUP4",
      "path": "4"
    },
    "277": {
      "fn": "TicTacToeRules.isMoveWithinRange",
      "offset": [2409, 2430],
      "op": "AND",
      "path": "4"
    },
    "278": {
      "fn": "TicTacToeRules.isMoveWithinRange",
      "offset": [2409, 2430],
      "op": "LT",
      "path": "4"
    },
    "279": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1573, 1593],
      "op": "JUMPDEST",
      "path": "4"
    },
    "280": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1516, 1614],
      "op": "DUP1",
      "path": "4"
    },
    "281": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1516, 1614],
      "op": "ISZERO",
      "path": "4"
    },
    "282": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1516, 1614],
      "op": "PUSH2",
      "path": "4",
      "value": "0x128"
    },
    "285": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1516, 1614],
      "op": "JUMPI",
      "path": "4"
    },
    "286": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1516, 1614],
      "op": "POP",
      "path": "4"
    },
    "287": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1597, 1614],
      "op": "PUSH2",
      "path": "4",
      "value": "0x128"
    },
    "290": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1609, 1610],
      "op": "DUP5",
      "path": "4"
    },
    "291": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1612, 1613],
      "op": "DUP4",
      "path": "4"
    },
    "292": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1597, 1608],
      "op": "PUSH2",
      "path": "4",
      "value": "0x29E"
    },
    "295": {
      "fn": "TicTacToeRules.isValidMove",
      "jump": "i",
      "offset": [1597, 1614],
      "op": "JUMP",
      "path": "4"
    },
    "296": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1597, 1614],
      "op": "JUMPDEST",
      "path": "4"
    },
    "297": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1509, 1614],
      "op": "SWAP10",
      "path": "4"
    },
    "298": {
      "fn": "TicTacToeRules.isValidMove",
      "offset": [1159, 1621],
      "op": "SWAP9",
      "path": "4"
    },
    "299": {
      "op": "POP"
    },
    "300": {
      "op": "POP"
    },
    "301": {
      "op": "POP"
    },
    "302": {
      "op": "POP"
    },
    "303": {
      "op": "POP"
    },
    "304": {
      "op": "POP"
    },
    "305": {
      "op": "POP"
    },
    "306": {
      "op": "POP"
    },
    "307": {
      "op": "POP"
    },
    "308": {
      "fn": "TicTacToeRules.isValidMove",
      "jump": "o",
      "offset": [1159, 1621],
      "op": "JUMP",
      "path": "4"
    },
    "309": {
      "fn": "TicTacToeRules.transition",
      "offset": [1627, 2021],
      "op": "JUMPDEST",
      "path": "4"
    },
    "310": {
      "fn": "TicTacToeRules.transition",
      "offset": [1748, 1764],
      "op": "PUSH2",
      "path": "4",
      "value": "0x159"
    },
    "313": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "315": {
      "op": "MLOAD"
    },
    "316": {
      "op": "DUP1"
    },
    "317": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "319": {
      "op": "ADD"
    },
    "320": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "322": {
      "op": "MSTORE"
    },
    "323": {
      "op": "DUP1"
    },
    "324": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "326": {
      "op": "DUP2"
    },
    "327": {
      "op": "MSTORE"
    },
    "328": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "330": {
      "op": "ADD"
    },
    "331": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "333": {
      "op": "DUP2"
    },
    "334": {
      "op": "MSTORE"
    },
    "335": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "337": {
      "op": "ADD"
    },
    "338": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "340": {
      "op": "DUP2"
    },
    "341": {
      "op": "MSTORE"
    },
    "342": {
      "op": "POP"
    },
    "343": {
      "op": "SWAP1"
    },
    "344": {
      "op": "JUMP"
    },
    "345": {
      "fn": "TicTacToeRules.transition",
      "offset": [1748, 1764],
      "op": "JUMPDEST",
      "path": "4"
    },
    "346": {
      "fn": "TicTacToeRules.transition",
      "offset": [1776, 1790],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "348": {
      "fn": "TicTacToeRules.transition",
      "offset": [1804, 1820],
      "op": "PUSH2",
      "path": "4",
      "value": "0x168"
    },
    "351": {
      "fn": "TicTacToeRules.transition",
      "offset": [1804, 1820],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "353": {
      "fn": "TicTacToeRules.transition",
      "offset": [1804, 1820],
      "op": "DUP8",
      "path": "4"
    },
    "354": {
      "fn": "TicTacToeRules.transition",
      "offset": [1804, 1820],
      "op": "ADD",
      "path": "4"
    },
    "355": {
      "fn": "TicTacToeRules.transition",
      "offset": [1804, 1814],
      "op": "DUP8",
      "path": "4"
    },
    "356": {
      "fn": "TicTacToeRules.transition",
      "offset": [1804, 1820],
      "op": "PUSH2",
      "path": "4",
      "value": "0x421"
    },
    "359": {
      "fn": "TicTacToeRules.transition",
      "jump": "i",
      "offset": [1804, 1820],
      "op": "JUMP",
      "path": "4"
    },
    "360": {
      "fn": "TicTacToeRules.transition",
      "offset": [1804, 1820],
      "op": "JUMPDEST",
      "path": "4"
    },
    "361": {
      "fn": "TicTacToeRules.transition",
      "offset": [1793, 1830],
      "op": "DUP2",
      "path": "4"
    },
    "362": {
      "fn": "TicTacToeRules.transition",
      "offset": [1793, 1830],
      "op": "ADD",
      "path": "4"
    },
    "363": {
      "fn": "TicTacToeRules.transition",
      "offset": [1793, 1830],
      "op": "SWAP1",
      "path": "4"
    },
    "364": {
      "fn": "TicTacToeRules.transition",
      "offset": [1793, 1830],
      "op": "PUSH2",
      "path": "4",
      "value": "0x175"
    },
    "367": {
      "fn": "TicTacToeRules.transition",
      "offset": [1793, 1830],
      "op": "SWAP2",
      "path": "4"
    },
    "368": {
      "fn": "TicTacToeRules.transition",
      "offset": [1793, 1830],
      "op": "SWAP1",
      "path": "4"
    },
    "369": {
      "fn": "TicTacToeRules.transition",
      "offset": [1793, 1830],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4E2"
    },
    "372": {
      "fn": "TicTacToeRules.transition",
      "jump": "i",
      "offset": [1793, 1830],
      "op": "JUMP",
      "path": "4"
    },
    "373": {
      "fn": "TicTacToeRules.transition",
      "offset": [1793, 1830],
      "op": "JUMPDEST",
      "path": "4"
    },
    "374": {
      "fn": "TicTacToeRules.transition",
      "offset": [1776, 1830],
      "op": "SWAP1",
      "path": "4"
    },
    "375": {
      "op": "POP"
    },
    "376": {
      "fn": "TicTacToeRules.transition",
      "offset": [1840, 1848],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "378": {
      "fn": "TicTacToeRules.transition",
      "offset": [1851, 1877],
      "op": "PUSH2",
      "path": "4",
      "value": "0x185"
    },
    "381": {
      "fn": "TicTacToeRules.transition",
      "offset": [1851, 1877],
      "op": "DUP5",
      "path": "4"
    },
    "382": {
      "fn": "TicTacToeRules.transition",
      "offset": [1851, 1877],
      "op": "DUP7",
      "path": "4"
    },
    "383": {
      "fn": "TicTacToeRules.transition",
      "offset": [1851, 1877],
      "op": "ADD",
      "path": "4"
    },
    "384": {
      "fn": "TicTacToeRules.transition",
      "offset": [1862, 1867],
      "op": "DUP7",
      "path": "4"
    },
    "385": {
      "fn": "TicTacToeRules.transition",
      "offset": [1851, 1877],
      "op": "PUSH2",
      "path": "4",
      "value": "0x576"
    },
    "388": {
      "fn": "TicTacToeRules.transition",
      "jump": "i",
      "offset": [1851, 1877],
      "op": "JUMP",
      "path": "4"
    },
    "389": {
      "fn": "TicTacToeRules.transition",
      "offset": [1851, 1877],
      "op": "JUMPDEST",
      "path": "4"
    },
    "390": {
      "fn": "TicTacToeRules.transition",
      "offset": [1840, 1877],
      "op": "SWAP1",
      "path": "4"
    },
    "391": {
      "op": "POP"
    },
    "392": {
      "fn": "TicTacToeRules.transition",
      "offset": [1911, 1931],
      "op": "PUSH2",
      "path": "4",
      "statement": 2,
      "value": "0x196"
    },
    "395": {
      "fn": "TicTacToeRules.transition",
      "offset": [1930, 1931],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "397": {
      "fn": "TicTacToeRules.transition",
      "offset": [1911, 1927],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "399": {
      "fn": "TicTacToeRules.transition",
      "offset": [1911, 1927],
      "op": "DUP10",
      "path": "4"
    },
    "400": {
      "fn": "TicTacToeRules.transition",
      "offset": [1911, 1927],
      "op": "ADD",
      "path": "4"
    },
    "401": {
      "fn": "TicTacToeRules.transition",
      "offset": [1911, 1927],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "402": {
      "fn": "TicTacToeRules.transition",
      "offset": [1911, 1931],
      "op": "PUSH2",
      "path": "4",
      "value": "0x591"
    },
    "405": {
      "fn": "TicTacToeRules.transition",
      "jump": "i",
      "offset": [1911, 1931],
      "op": "JUMP",
      "path": "4"
    },
    "406": {
      "fn": "TicTacToeRules.transition",
      "offset": [1911, 1931],
      "op": "JUMPDEST",
      "path": "4"
    },
    "407": {
      "fn": "TicTacToeRules.transition",
      "offset": [1907, 1931],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1A1"
    },
    "410": {
      "fn": "TicTacToeRules.transition",
      "offset": [1907, 1931],
      "op": "SWAP1",
      "path": "4"
    },
    "411": {
      "fn": "TicTacToeRules.transition",
      "offset": [1907, 1908],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "413": {
      "fn": "TicTacToeRules.transition",
      "offset": [1907, 1931],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5B3"
    },
    "416": {
      "fn": "TicTacToeRules.transition",
      "jump": "i",
      "offset": [1907, 1931],
      "op": "JUMP",
      "path": "4"
    },
    "417": {
      "fn": "TicTacToeRules.transition",
      "offset": [1907, 1931],
      "op": "JUMPDEST",
      "path": "4"
    },
    "418": {
      "fn": "TicTacToeRules.transition",
      "offset": [1887, 1894],
      "op": "DUP3",
      "path": "4"
    },
    "419": {
      "fn": "TicTacToeRules.transition",
      "offset": [1887, 1894],
      "op": "MLOAD",
      "path": "4"
    },
    "420": {
      "fn": "TicTacToeRules.transition",
      "offset": [1887, 1898],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "422": {
      "fn": "TicTacToeRules.transition",
      "offset": [1887, 1898],
      "op": "DUP4",
      "path": "4"
    },
    "423": {
      "fn": "TicTacToeRules.transition",
      "offset": [1887, 1898],
      "op": "AND",
      "path": "4"
    },
    "424": {
      "fn": "TicTacToeRules.transition",
      "offset": [1887, 1898],
      "op": "PUSH1",
      "path": "4",
      "value": "0x9"
    },
    "426": {
      "fn": "TicTacToeRules.transition",
      "offset": [1887, 1898],
      "op": "DUP2",
      "path": "4"
    },
    "427": {
      "fn": "TicTacToeRules.transition",
      "offset": [1887, 1898],
      "op": "LT",
      "path": "4"
    },
    "428": {
      "fn": "TicTacToeRules.transition",
      "offset": [1887, 1898],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1B7"
    },
    "431": {
      "fn": "TicTacToeRules.transition",
      "offset": [1887, 1898],
      "op": "JUMPI",
      "path": "4"
    },
    "432": {
      "fn": "TicTacToeRules.transition",
      "offset": [1887, 1898],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1B7"
    },
    "435": {
      "fn": "TicTacToeRules.transition",
      "offset": [1887, 1898],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5D4"
    },
    "438": {
      "fn": "TicTacToeRules.transition",
      "jump": "i",
      "offset": [1887, 1898],
      "op": "JUMP",
      "path": "4"
    },
    "439": {
      "fn": "TicTacToeRules.transition",
      "offset": [1887, 1898],
      "op": "JUMPDEST",
      "path": "4"
    },
    "440": {
      "fn": "TicTacToeRules.transition",
      "offset": [1887, 1932],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "442": {
      "fn": "TicTacToeRules.transition",
      "offset": [1887, 1932],
      "op": "SWAP1",
      "path": "4"
    },
    "443": {
      "fn": "TicTacToeRules.transition",
      "offset": [1887, 1932],
      "op": "SWAP3",
      "path": "4"
    },
    "444": {
      "fn": "TicTacToeRules.transition",
      "offset": [1887, 1932],
      "op": "AND",
      "path": "4"
    },
    "445": {
      "fn": "TicTacToeRules.transition",
      "offset": [1887, 1898],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "447": {
      "fn": "TicTacToeRules.transition",
      "offset": [1887, 1898],
      "op": "SWAP3",
      "path": "4"
    },
    "448": {
      "fn": "TicTacToeRules.transition",
      "offset": [1887, 1898],
      "op": "DUP4",
      "path": "4"
    },
    "449": {
      "fn": "TicTacToeRules.transition",
      "offset": [1887, 1898],
      "op": "MUL",
      "path": "4"
    },
    "450": {
      "fn": "TicTacToeRules.transition",
      "offset": [1887, 1898],
      "op": "SWAP2",
      "path": "4"
    },
    "451": {
      "fn": "TicTacToeRules.transition",
      "offset": [1887, 1898],
      "op": "SWAP1",
      "path": "4"
    },
    "452": {
      "fn": "TicTacToeRules.transition",
      "offset": [1887, 1898],
      "op": "SWAP2",
      "path": "4"
    },
    "453": {
      "fn": "TicTacToeRules.transition",
      "offset": [1887, 1898],
      "op": "ADD",
      "path": "4"
    },
    "454": {
      "fn": "TicTacToeRules.transition",
      "offset": [1887, 1932],
      "op": "MSTORE",
      "path": "4"
    },
    "455": {
      "fn": "TicTacToeRules.transition",
      "offset": [1949, 2014],
      "op": "PUSH1",
      "path": "4",
      "statement": 3,
      "value": "0x40"
    },
    "457": {
      "fn": "TicTacToeRules.transition",
      "offset": [1949, 2014],
      "op": "DUP1",
      "path": "4"
    },
    "458": {
      "fn": "TicTacToeRules.transition",
      "offset": [1949, 2014],
      "op": "MLOAD",
      "path": "4"
    },
    "459": {
      "fn": "TicTacToeRules.transition",
      "offset": [1949, 2014],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "461": {
      "fn": "TicTacToeRules.transition",
      "offset": [1949, 2014],
      "op": "DUP2",
      "path": "4"
    },
    "462": {
      "fn": "TicTacToeRules.transition",
      "offset": [1949, 2014],
      "op": "ADD",
      "path": "4"
    },
    "463": {
      "fn": "TicTacToeRules.transition",
      "offset": [1949, 2014],
      "op": "SWAP1",
      "path": "4"
    },
    "464": {
      "fn": "TicTacToeRules.transition",
      "offset": [1949, 2014],
      "op": "SWAP2",
      "path": "4"
    },
    "465": {
      "fn": "TicTacToeRules.transition",
      "offset": [1949, 2014],
      "op": "MSTORE",
      "path": "4"
    },
    "466": {
      "fn": "TicTacToeRules.transition",
      "offset": [1959, 1976],
      "op": "DUP9",
      "path": "4"
    },
    "467": {
      "fn": "TicTacToeRules.transition",
      "offset": [1959, 1976],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "468": {
      "fn": "TicTacToeRules.transition",
      "offset": [1949, 2014],
      "op": "DUP2",
      "path": "4"
    },
    "469": {
      "fn": "TicTacToeRules.transition",
      "offset": [1949, 2014],
      "op": "MSTORE",
      "path": "4"
    },
    "470": {
      "fn": "TicTacToeRules.transition",
      "offset": [1949, 2014],
      "op": "SWAP1",
      "path": "4"
    },
    "471": {
      "fn": "TicTacToeRules.transition",
      "offset": [1949, 2014],
      "op": "DUP2",
      "path": "4"
    },
    "472": {
      "fn": "TicTacToeRules.transition",
      "offset": [1949, 2014],
      "op": "DUP2",
      "path": "4"
    },
    "473": {
      "fn": "TicTacToeRules.transition",
      "offset": [1949, 2014],
      "op": "ADD",
      "path": "4"
    },
    "474": {
      "fn": "TicTacToeRules.transition",
      "offset": [1949, 2014],
      "op": "SWAP1",
      "path": "4"
    },
    "475": {
      "fn": "TicTacToeRules.transition",
      "offset": [1978, 1998],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E8"
    },
    "478": {
      "fn": "TicTacToeRules.transition",
      "offset": [1978, 1998],
      "op": "SWAP1",
      "path": "4"
    },
    "479": {
      "fn": "TicTacToeRules.transition",
      "offset": [1978, 1994],
      "op": "DUP11",
      "path": "4"
    },
    "480": {
      "fn": "TicTacToeRules.transition",
      "offset": [1978, 1994],
      "op": "ADD",
      "path": "4"
    },
    "481": {
      "fn": "TicTacToeRules.transition",
      "offset": [1978, 1994],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "482": {
      "fn": "TicTacToeRules.transition",
      "offset": [1997, 1998],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "484": {
      "fn": "TicTacToeRules.transition",
      "offset": [1978, 1998],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5B3"
    },
    "487": {
      "fn": "TicTacToeRules.transition",
      "jump": "i",
      "offset": [1978, 1998],
      "op": "JUMP",
      "path": "4"
    },
    "488": {
      "fn": "TicTacToeRules.transition",
      "offset": [1978, 1998],
      "op": "JUMPDEST",
      "path": "4"
    },
    "489": {
      "fn": "TicTacToeRules.transition",
      "offset": [1949, 2014],
      "op": "DUP2",
      "path": "4"
    },
    "490": {
      "fn": "TicTacToeRules.transition",
      "offset": [1949, 2014],
      "op": "MSTORE",
      "path": "4"
    },
    "491": {
      "fn": "TicTacToeRules.transition",
      "offset": [1949, 2014],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "493": {
      "fn": "TicTacToeRules.transition",
      "offset": [1949, 2014],
      "op": "ADD",
      "path": "4"
    },
    "494": {
      "fn": "TicTacToeRules.transition",
      "offset": [2011, 2012],
      "op": "DUP4",
      "path": "4"
    },
    "495": {
      "fn": "TicTacToeRules.transition",
      "offset": [2000, 2013],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "497": {
      "fn": "TicTacToeRules.transition",
      "offset": [2000, 2013],
      "op": "MLOAD",
      "path": "4"
    },
    "498": {
      "fn": "TicTacToeRules.transition",
      "offset": [2000, 2013],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "500": {
      "fn": "TicTacToeRules.transition",
      "offset": [2000, 2013],
      "op": "ADD",
      "path": "4"
    },
    "501": {
      "fn": "TicTacToeRules.transition",
      "offset": [2000, 2013],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1FE"
    },
    "504": {
      "fn": "TicTacToeRules.transition",
      "offset": [2000, 2013],
      "op": "SWAP2",
      "path": "4"
    },
    "505": {
      "fn": "TicTacToeRules.transition",
      "offset": [2000, 2013],
      "op": "SWAP1",
      "path": "4"
    },
    "506": {
      "fn": "TicTacToeRules.transition",
      "offset": [2000, 2013],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5EA"
    },
    "509": {
      "fn": "TicTacToeRules.transition",
      "jump": "i",
      "offset": [2000, 2013],
      "op": "JUMP",
      "path": "4"
    },
    "510": {
      "fn": "TicTacToeRules.transition",
      "offset": [2000, 2013],
      "op": "JUMPDEST",
      "path": "4"
    },
    "511": {
      "fn": "TicTacToeRules.transition",
      "offset": [2000, 2013],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "513": {
      "fn": "TicTacToeRules.transition",
      "offset": [2000, 2013],
      "op": "DUP1",
      "path": "4"
    },
    "514": {
      "fn": "TicTacToeRules.transition",
      "offset": [2000, 2013],
      "op": "MLOAD",
      "path": "4"
    },
    "515": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "517": {
      "op": "NOT"
    },
    "518": {
      "fn": "TicTacToeRules.transition",
      "offset": [2000, 2013],
      "op": "DUP2",
      "path": "4"
    },
    "519": {
      "fn": "TicTacToeRules.transition",
      "offset": [2000, 2013],
      "op": "DUP5",
      "path": "4"
    },
    "520": {
      "fn": "TicTacToeRules.transition",
      "offset": [2000, 2013],
      "op": "SUB",
      "path": "4"
    },
    "521": {
      "fn": "TicTacToeRules.transition",
      "offset": [2000, 2013],
      "op": "ADD",
      "path": "4"
    },
    "522": {
      "fn": "TicTacToeRules.transition",
      "offset": [2000, 2013],
      "op": "DUP2",
      "path": "4"
    },
    "523": {
      "fn": "TicTacToeRules.transition",
      "offset": [2000, 2013],
      "op": "MSTORE",
      "path": "4"
    },
    "524": {
      "fn": "TicTacToeRules.transition",
      "offset": [2000, 2013],
      "op": "SWAP2",
      "path": "4"
    },
    "525": {
      "fn": "TicTacToeRules.transition",
      "offset": [2000, 2013],
      "op": "SWAP1",
      "path": "4"
    },
    "526": {
      "fn": "TicTacToeRules.transition",
      "offset": [2000, 2013],
      "op": "MSTORE",
      "path": "4"
    },
    "527": {
      "fn": "TicTacToeRules.transition",
      "offset": [1949, 2014],
      "op": "SWAP1",
      "path": "4"
    },
    "528": {
      "fn": "TicTacToeRules.transition",
      "offset": [1949, 2014],
      "op": "MSTORE",
      "path": "4"
    },
    "529": {
      "fn": "TicTacToeRules.transition",
      "offset": [1942, 2014],
      "op": "SWAP8",
      "path": "4"
    },
    "530": {
      "fn": "TicTacToeRules.transition",
      "offset": [1627, 2021],
      "op": "SWAP7",
      "path": "4"
    },
    "531": {
      "op": "POP"
    },
    "532": {
      "op": "POP"
    },
    "533": {
      "op": "POP"
    },
    "534": {
      "op": "POP"
    },
    "535": {
      "op": "POP"
    },
    "536": {
      "op": "POP"
    },
    "537": {
      "op": "POP"
    },
    "538": {
      "fn": "TicTacToeRules.transition",
      "jump": "o",
      "offset": [1627, 2021],
      "op": "JUMP",
      "path": "4"
    },
    "539": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2027, 2183],
      "op": "JUMPDEST",
      "path": "4"
    },
    "540": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "PUSH1",
      "path": "4",
      "statement": 4,
      "value": "0x40"
    },
    "542": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "DUP1",
      "path": "4"
    },
    "543": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "MLOAD",
      "path": "4"
    },
    "544": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "PUSH2",
      "path": "4",
      "value": "0x180"
    },
    "547": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "DUP2",
      "path": "4"
    },
    "548": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "ADD",
      "path": "4"
    },
    "549": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "DUP3",
      "path": "4"
    },
    "550": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "MSTORE",
      "path": "4"
    },
    "551": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "553": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2085, 2097],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "555": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "DUP3",
      "path": "4"
    },
    "556": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "DUP2",
      "path": "4"
    },
    "557": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "ADD",
      "path": "4"
    },
    "558": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "DUP3",
      "path": "4"
    },
    "559": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "DUP2",
      "path": "4"
    },
    "560": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "MSTORE",
      "path": "4"
    },
    "561": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "PUSH1",
      "path": "4",
      "value": "0x80"
    },
    "563": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "DUP5",
      "path": "4"
    },
    "564": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "ADD",
      "path": "4"
    },
    "565": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "DUP4",
      "path": "4"
    },
    "566": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "SWAP1",
      "path": "4"
    },
    "567": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "MSTORE",
      "path": "4"
    },
    "568": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "PUSH1",
      "path": "4",
      "value": "0xA0"
    },
    "570": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "DUP5",
      "path": "4"
    },
    "571": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "ADD",
      "path": "4"
    },
    "572": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "DUP4",
      "path": "4"
    },
    "573": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "SWAP1",
      "path": "4"
    },
    "574": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "MSTORE",
      "path": "4"
    },
    "575": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "PUSH1",
      "path": "4",
      "value": "0xC0"
    },
    "577": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "DUP5",
      "path": "4"
    },
    "578": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "ADD",
      "path": "4"
    },
    "579": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "DUP4",
      "path": "4"
    },
    "580": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "SWAP1",
      "path": "4"
    },
    "581": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "MSTORE",
      "path": "4"
    },
    "582": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE0"
    },
    "584": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "DUP5",
      "path": "4"
    },
    "585": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "ADD",
      "path": "4"
    },
    "586": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "DUP4",
      "path": "4"
    },
    "587": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "SWAP1",
      "path": "4"
    },
    "588": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "MSTORE",
      "path": "4"
    },
    "589": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "PUSH2",
      "path": "4",
      "value": "0x100"
    },
    "592": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "DUP5",
      "path": "4"
    },
    "593": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "ADD",
      "path": "4"
    },
    "594": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "DUP4",
      "path": "4"
    },
    "595": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "SWAP1",
      "path": "4"
    },
    "596": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "MSTORE",
      "path": "4"
    },
    "597": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "PUSH2",
      "path": "4",
      "value": "0x120"
    },
    "600": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "DUP5",
      "path": "4"
    },
    "601": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "ADD",
      "path": "4"
    },
    "602": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "DUP4",
      "path": "4"
    },
    "603": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "SWAP1",
      "path": "4"
    },
    "604": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "MSTORE",
      "path": "4"
    },
    "605": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "PUSH2",
      "path": "4",
      "value": "0x140"
    },
    "608": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "DUP5",
      "path": "4"
    },
    "609": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "ADD",
      "path": "4"
    },
    "610": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "DUP4",
      "path": "4"
    },
    "611": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "SWAP1",
      "path": "4"
    },
    "612": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "MSTORE",
      "path": "4"
    },
    "613": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "PUSH2",
      "path": "4",
      "value": "0x160"
    },
    "616": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "DUP5",
      "path": "4"
    },
    "617": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "ADD",
      "path": "4"
    },
    "618": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "DUP4",
      "path": "4"
    },
    "619": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "SWAP1",
      "path": "4"
    },
    "620": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "MSTORE",
      "path": "4"
    },
    "621": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "DUP4",
      "path": "4"
    },
    "622": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "MSTORE",
      "path": "4"
    },
    "623": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "625": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "DUP1",
      "path": "4"
    },
    "626": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "DUP5",
      "path": "4"
    },
    "627": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "ADD",
      "path": "4"
    },
    "628": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "DUP4",
      "path": "4"
    },
    "629": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "SWAP1",
      "path": "4"
    },
    "630": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "MSTORE",
      "path": "4"
    },
    "631": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "DUP4",
      "path": "4"
    },
    "632": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "DUP6",
      "path": "4"
    },
    "633": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "ADD",
      "path": "4"
    },
    "634": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "SWAP3",
      "path": "4"
    },
    "635": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "SWAP1",
      "path": "4"
    },
    "636": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "SWAP3",
      "path": "4"
    },
    "637": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "MSTORE",
      "path": "4"
    },
    "638": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2116, 2176],
      "op": "SWAP3",
      "path": "4"
    },
    "639": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2116, 2176],
      "op": "MLOAD",
      "path": "4"
    },
    "640": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2116, 2176],
      "op": "PUSH2",
      "path": "4",
      "value": "0x28A"
    },
    "643": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2116, 2176],
      "op": "SWAP3",
      "path": "4"
    },
    "644": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2127, 2175],
      "op": "SWAP2",
      "path": "4"
    },
    "645": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2116, 2176],
      "op": "ADD",
      "path": "4"
    },
    "646": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2116, 2176],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5EA"
    },
    "649": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "jump": "i",
      "offset": [2116, 2176],
      "op": "JUMP",
      "path": "4"
    },
    "650": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2116, 2176],
      "op": "JUMPDEST",
      "path": "4"
    },
    "651": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2116, 2176],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "653": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2116, 2176],
      "op": "MLOAD",
      "path": "4"
    },
    "654": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2116, 2176],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "656": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2116, 2176],
      "op": "DUP2",
      "path": "4"
    },
    "657": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2116, 2176],
      "op": "DUP4",
      "path": "4"
    },
    "658": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2116, 2176],
      "op": "SUB",
      "path": "4"
    },
    "659": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2116, 2176],
      "op": "SUB",
      "path": "4"
    },
    "660": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2116, 2176],
      "op": "DUP2",
      "path": "4"
    },
    "661": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2116, 2176],
      "op": "MSTORE",
      "path": "4"
    },
    "662": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2116, 2176],
      "op": "SWAP1",
      "path": "4"
    },
    "663": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2116, 2176],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "665": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2116, 2176],
      "op": "MSTORE",
      "path": "4"
    },
    "666": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2109, 2176],
      "op": "SWAP1",
      "path": "4"
    },
    "667": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2109, 2176],
      "op": "POP",
      "path": "4"
    },
    "668": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "offset": [2027, 2183],
      "op": "SWAP1",
      "path": "4"
    },
    "669": {
      "fn": "TicTacToeRules.defaultInitialGameState",
      "jump": "o",
      "offset": [2027, 2183],
      "op": "JUMP",
      "path": "4"
    },
    "670": {
      "fn": "TicTacToeRules.isCellEmpty",
      "offset": [2189, 2320],
      "op": "JUMPDEST",
      "path": "4"
    },
    "671": {
      "fn": "TicTacToeRules.isCellEmpty",
      "offset": [2282, 2289],
      "op": "DUP2",
      "path": "4",
      "statement": 5
    },
    "672": {
      "fn": "TicTacToeRules.isCellEmpty",
      "offset": [2282, 2289],
      "op": "MLOAD",
      "path": "4"
    },
    "673": {
      "fn": "TicTacToeRules.isCellEmpty",
      "offset": [2259, 2263],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "675": {
      "fn": "TicTacToeRules.isCellEmpty",
      "offset": [2259, 2263],
      "op": "SWAP1",
      "path": "4"
    },
    "676": {
      "fn": "TicTacToeRules.isCellEmpty",
      "offset": [2282, 2308],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "678": {
      "fn": "TicTacToeRules.isCellEmpty",
      "offset": [2282, 2308],
      "op": "DUP4",
      "path": "4"
    },
    "679": {
      "fn": "TicTacToeRules.isCellEmpty",
      "offset": [2282, 2308],
      "op": "AND",
      "path": "4"
    },
    "680": {
      "fn": "TicTacToeRules.isCellEmpty",
      "offset": [2282, 2308],
      "op": "PUSH1",
      "path": "4",
      "value": "0x9"
    },
    "682": {
      "fn": "TicTacToeRules.isCellEmpty",
      "offset": [2282, 2308],
      "op": "DUP2",
      "path": "4"
    },
    "683": {
      "fn": "TicTacToeRules.isCellEmpty",
      "offset": [2282, 2308],
      "op": "LT",
      "path": "4"
    },
    "684": {
      "fn": "TicTacToeRules.isCellEmpty",
      "offset": [2282, 2308],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2B7"
    },
    "687": {
      "fn": "TicTacToeRules.isCellEmpty",
      "offset": [2282, 2308],
      "op": "JUMPI",
      "path": "4"
    },
    "688": {
      "fn": "TicTacToeRules.isCellEmpty",
      "offset": [2282, 2308],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2B7"
    },
    "691": {
      "fn": "TicTacToeRules.isCellEmpty",
      "offset": [2282, 2308],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5D4"
    },
    "694": {
      "fn": "TicTacToeRules.isCellEmpty",
      "jump": "i",
      "offset": [2282, 2308],
      "op": "JUMP",
      "path": "4"
    },
    "695": {
      "fn": "TicTacToeRules.isCellEmpty",
      "offset": [2282, 2308],
      "op": "JUMPDEST",
      "path": "4"
    },
    "696": {
      "fn": "TicTacToeRules.isCellEmpty",
      "offset": [2282, 2308],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "698": {
      "fn": "TicTacToeRules.isCellEmpty",
      "offset": [2282, 2308],
      "op": "MUL",
      "path": "4"
    },
    "699": {
      "fn": "TicTacToeRules.isCellEmpty",
      "offset": [2282, 2308],
      "op": "ADD",
      "path": "4"
    },
    "700": {
      "fn": "TicTacToeRules.isCellEmpty",
      "offset": [2282, 2308],
      "op": "MLOAD",
      "path": "4"
    },
    "701": {
      "fn": "TicTacToeRules.isCellEmpty",
      "offset": [2282, 2313],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "703": {
      "fn": "TicTacToeRules.isCellEmpty",
      "offset": [2282, 2313],
      "op": "AND",
      "path": "4"
    },
    "704": {
      "fn": "TicTacToeRules.isCellEmpty",
      "offset": [2282, 2313],
      "op": "ISZERO",
      "path": "4"
    },
    "705": {
      "fn": "TicTacToeRules.isCellEmpty",
      "offset": [2282, 2313],
      "op": "SWAP1",
      "path": "4"
    },
    "706": {
      "op": "POP"
    },
    "707": {
      "fn": "TicTacToeRules.isCellEmpty",
      "offset": [2189, 2320],
      "op": "JUMPDEST",
      "path": "4"
    },
    "708": {
      "fn": "TicTacToeRules.isCellEmpty",
      "offset": [2189, 2320],
      "op": "SWAP3",
      "path": "4"
    },
    "709": {
      "fn": "TicTacToeRules.isCellEmpty",
      "offset": [2189, 2320],
      "op": "SWAP2",
      "path": "4"
    },
    "710": {
      "fn": "TicTacToeRules.isCellEmpty",
      "offset": [2189, 2320],
      "op": "POP",
      "path": "4"
    },
    "711": {
      "fn": "TicTacToeRules.isCellEmpty",
      "offset": [2189, 2320],
      "op": "POP",
      "path": "4"
    },
    "712": {
      "fn": "TicTacToeRules.isCellEmpty",
      "jump": "o",
      "offset": [2189, 2320],
      "op": "JUMP",
      "path": "4"
    },
    "713": {
      "op": "JUMPDEST"
    },
    "714": {
      "op": "DUP1"
    },
    "715": {
      "op": "CALLDATALOAD"
    },
    "716": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "718": {
      "op": "DUP2"
    },
    "719": {
      "op": "AND"
    },
    "720": {
      "op": "DUP2"
    },
    "721": {
      "op": "EQ"
    },
    "722": {
      "op": "PUSH2",
      "value": "0x2DA"
    },
    "725": {
      "op": "JUMPI"
    },
    "726": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "728": {
      "op": "DUP1"
    },
    "729": {
      "op": "REVERT"
    },
    "730": {
      "op": "JUMPDEST"
    },
    "731": {
      "op": "SWAP2"
    },
    "732": {
      "op": "SWAP1"
    },
    "733": {
      "op": "POP"
    },
    "734": {
      "jump": "o",
      "op": "JUMP"
    },
    "735": {
      "op": "JUMPDEST"
    },
    "736": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "738": {
      "op": "DUP1"
    },
    "739": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "741": {
      "op": "DUP1"
    },
    "742": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "744": {
      "op": "DUP6"
    },
    "745": {
      "op": "DUP8"
    },
    "746": {
      "op": "SUB"
    },
    "747": {
      "op": "SLT"
    },
    "748": {
      "op": "ISZERO"
    },
    "749": {
      "op": "PUSH2",
      "value": "0x2F5"
    },
    "752": {
      "op": "JUMPI"
    },
    "753": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "755": {
      "op": "DUP1"
    },
    "756": {
      "op": "REVERT"
    },
    "757": {
      "op": "JUMPDEST"
    },
    "758": {
      "op": "DUP5"
    },
    "759": {
      "op": "CALLDATALOAD"
    },
    "760": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "769": {
      "op": "DUP1"
    },
    "770": {
      "op": "DUP3"
    },
    "771": {
      "op": "GT"
    },
    "772": {
      "op": "ISZERO"
    },
    "773": {
      "op": "PUSH2",
      "value": "0x30D"
    },
    "776": {
      "op": "JUMPI"
    },
    "777": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "779": {
      "op": "DUP1"
    },
    "780": {
      "op": "REVERT"
    },
    "781": {
      "op": "JUMPDEST"
    },
    "782": {
      "op": "SWAP1"
    },
    "783": {
      "op": "DUP7"
    },
    "784": {
      "op": "ADD"
    },
    "785": {
      "op": "SWAP1"
    },
    "786": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "788": {
      "op": "DUP3"
    },
    "789": {
      "op": "DUP10"
    },
    "790": {
      "op": "SUB"
    },
    "791": {
      "op": "SLT"
    },
    "792": {
      "op": "ISZERO"
    },
    "793": {
      "op": "PUSH2",
      "value": "0x321"
    },
    "796": {
      "op": "JUMPI"
    },
    "797": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "799": {
      "op": "DUP1"
    },
    "800": {
      "op": "REVERT"
    },
    "801": {
      "op": "JUMPDEST"
    },
    "802": {
      "op": "DUP2"
    },
    "803": {
      "op": "SWAP6"
    },
    "804": {
      "op": "POP"
    },
    "805": {
      "op": "PUSH2",
      "value": "0x330"
    },
    "808": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "810": {
      "op": "DUP9"
    },
    "811": {
      "op": "ADD"
    },
    "812": {
      "op": "PUSH2",
      "value": "0x2C9"
    },
    "815": {
      "jump": "i",
      "op": "JUMP"
    },
    "816": {
      "op": "JUMPDEST"
    },
    "817": {
      "op": "SWAP5"
    },
    "818": {
      "op": "POP"
    },
    "819": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "821": {
      "op": "DUP8"
    },
    "822": {
      "op": "ADD"
    },
    "823": {
      "op": "CALLDATALOAD"
    },
    "824": {
      "op": "SWAP2"
    },
    "825": {
      "op": "POP"
    },
    "826": {
      "op": "DUP1"
    },
    "827": {
      "op": "DUP3"
    },
    "828": {
      "op": "GT"
    },
    "829": {
      "op": "ISZERO"
    },
    "830": {
      "op": "PUSH2",
      "value": "0x346"
    },
    "833": {
      "op": "JUMPI"
    },
    "834": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "836": {
      "op": "DUP1"
    },
    "837": {
      "op": "REVERT"
    },
    "838": {
      "op": "JUMPDEST"
    },
    "839": {
      "op": "DUP2"
    },
    "840": {
      "op": "DUP8"
    },
    "841": {
      "op": "ADD"
    },
    "842": {
      "op": "SWAP2"
    },
    "843": {
      "op": "POP"
    },
    "844": {
      "op": "DUP8"
    },
    "845": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "847": {
      "op": "DUP4"
    },
    "848": {
      "op": "ADD"
    },
    "849": {
      "op": "SLT"
    },
    "850": {
      "op": "PUSH2",
      "value": "0x35A"
    },
    "853": {
      "op": "JUMPI"
    },
    "854": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "856": {
      "op": "DUP1"
    },
    "857": {
      "op": "REVERT"
    },
    "858": {
      "op": "JUMPDEST"
    },
    "859": {
      "op": "DUP2"
    },
    "860": {
      "op": "CALLDATALOAD"
    },
    "861": {
      "op": "DUP2"
    },
    "862": {
      "op": "DUP2"
    },
    "863": {
      "op": "GT"
    },
    "864": {
      "op": "ISZERO"
    },
    "865": {
      "op": "PUSH2",
      "value": "0x369"
    },
    "868": {
      "op": "JUMPI"
    },
    "869": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "871": {
      "op": "DUP1"
    },
    "872": {
      "op": "REVERT"
    },
    "873": {
      "op": "JUMPDEST"
    },
    "874": {
      "op": "DUP9"
    },
    "875": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "877": {
      "op": "DUP3"
    },
    "878": {
      "op": "DUP6"
    },
    "879": {
      "op": "ADD"
    },
    "880": {
      "op": "ADD"
    },
    "881": {
      "op": "GT"
    },
    "882": {
      "op": "ISZERO"
    },
    "883": {
      "op": "PUSH2",
      "value": "0x37B"
    },
    "886": {
      "op": "JUMPI"
    },
    "887": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "889": {
      "op": "DUP1"
    },
    "890": {
      "op": "REVERT"
    },
    "891": {
      "op": "JUMPDEST"
    },
    "892": {
      "op": "SWAP6"
    },
    "893": {
      "op": "SWAP9"
    },
    "894": {
      "op": "SWAP5"
    },
    "895": {
      "op": "SWAP8"
    },
    "896": {
      "op": "POP"
    },
    "897": {
      "op": "POP"
    },
    "898": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "900": {
      "op": "ADD"
    },
    "901": {
      "op": "SWAP5"
    },
    "902": {
      "op": "POP"
    },
    "903": {
      "op": "POP"
    },
    "904": {
      "op": "POP"
    },
    "905": {
      "jump": "o",
      "op": "JUMP"
    },
    "906": {
      "op": "JUMPDEST"
    },
    "907": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "909": {
      "op": "DUP2"
    },
    "910": {
      "op": "MLOAD"
    },
    "911": {
      "op": "DUP1"
    },
    "912": {
      "op": "DUP5"
    },
    "913": {
      "op": "MSTORE"
    },
    "914": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "916": {
      "op": "JUMPDEST"
    },
    "917": {
      "op": "DUP2"
    },
    "918": {
      "op": "DUP2"
    },
    "919": {
      "op": "LT"
    },
    "920": {
      "op": "ISZERO"
    },
    "921": {
      "op": "PUSH2",
      "value": "0x3B0"
    },
    "924": {
      "op": "JUMPI"
    },
    "925": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "927": {
      "op": "DUP2"
    },
    "928": {
      "op": "DUP6"
    },
    "929": {
      "op": "ADD"
    },
    "930": {
      "op": "DUP2"
    },
    "931": {
      "op": "ADD"
    },
    "932": {
      "op": "MLOAD"
    },
    "933": {
      "op": "DUP7"
    },
    "934": {
      "op": "DUP4"
    },
    "935": {
      "op": "ADD"
    },
    "936": {
      "op": "DUP3"
    },
    "937": {
      "op": "ADD"
    },
    "938": {
      "op": "MSTORE"
    },
    "939": {
      "op": "ADD"
    },
    "940": {
      "op": "PUSH2",
      "value": "0x394"
    },
    "943": {
      "op": "JUMP"
    },
    "944": {
      "op": "JUMPDEST"
    },
    "945": {
      "op": "POP"
    },
    "946": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "948": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "950": {
      "op": "DUP3"
    },
    "951": {
      "op": "DUP7"
    },
    "952": {
      "op": "ADD"
    },
    "953": {
      "op": "ADD"
    },
    "954": {
      "op": "MSTORE"
    },
    "955": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "957": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "959": {
      "op": "NOT"
    },
    "960": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "962": {
      "op": "DUP4"
    },
    "963": {
      "op": "ADD"
    },
    "964": {
      "op": "AND"
    },
    "965": {
      "op": "DUP6"
    },
    "966": {
      "op": "ADD"
    },
    "967": {
      "op": "ADD"
    },
    "968": {
      "op": "SWAP2"
    },
    "969": {
      "op": "POP"
    },
    "970": {
      "op": "POP"
    },
    "971": {
      "op": "SWAP3"
    },
    "972": {
      "op": "SWAP2"
    },
    "973": {
      "op": "POP"
    },
    "974": {
      "op": "POP"
    },
    "975": {
      "jump": "o",
      "op": "JUMP"
    },
    "976": {
      "op": "JUMPDEST"
    },
    "977": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "979": {
      "op": "DUP2"
    },
    "980": {
      "op": "MSTORE"
    },
    "981": {
      "op": "DUP2"
    },
    "982": {
      "op": "MLOAD"
    },
    "983": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "985": {
      "op": "DUP3"
    },
    "986": {
      "op": "ADD"
    },
    "987": {
      "op": "MSTORE"
    },
    "988": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "990": {
      "op": "DUP3"
    },
    "991": {
      "op": "ADD"
    },
    "992": {
      "op": "MLOAD"
    },
    "993": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "995": {
      "op": "DUP3"
    },
    "996": {
      "op": "ADD"
    },
    "997": {
      "op": "MSTORE"
    },
    "998": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1000": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1002": {
      "op": "DUP4"
    },
    "1003": {
      "op": "ADD"
    },
    "1004": {
      "op": "MLOAD"
    },
    "1005": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1007": {
      "op": "DUP1"
    },
    "1008": {
      "op": "DUP5"
    },
    "1009": {
      "op": "ADD"
    },
    "1010": {
      "op": "MSTORE"
    },
    "1011": {
      "op": "PUSH2",
      "value": "0x3FF"
    },
    "1014": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1016": {
      "op": "DUP5"
    },
    "1017": {
      "op": "ADD"
    },
    "1018": {
      "op": "DUP3"
    },
    "1019": {
      "op": "PUSH2",
      "value": "0x38A"
    },
    "1022": {
      "jump": "i",
      "op": "JUMP"
    },
    "1023": {
      "op": "JUMPDEST"
    },
    "1024": {
      "op": "SWAP5"
    },
    "1025": {
      "op": "SWAP4"
    },
    "1026": {
      "op": "POP"
    },
    "1027": {
      "op": "POP"
    },
    "1028": {
      "op": "POP"
    },
    "1029": {
      "op": "POP"
    },
    "1030": {
      "jump": "o",
      "op": "JUMP"
    },
    "1031": {
      "op": "JUMPDEST"
    },
    "1032": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1034": {
      "op": "DUP2"
    },
    "1035": {
      "op": "MSTORE"
    },
    "1036": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1038": {
      "op": "PUSH2",
      "value": "0x41A"
    },
    "1041": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1043": {
      "op": "DUP4"
    },
    "1044": {
      "op": "ADD"
    },
    "1045": {
      "op": "DUP5"
    },
    "1046": {
      "op": "PUSH2",
      "value": "0x38A"
    },
    "1049": {
      "jump": "i",
      "op": "JUMP"
    },
    "1050": {
      "op": "JUMPDEST"
    },
    "1051": {
      "op": "SWAP4"
    },
    "1052": {
      "op": "SWAP3"
    },
    "1053": {
      "op": "POP"
    },
    "1054": {
      "op": "POP"
    },
    "1055": {
      "op": "POP"
    },
    "1056": {
      "jump": "o",
      "op": "JUMP"
    },
    "1057": {
      "op": "JUMPDEST"
    },
    "1058": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1060": {
      "op": "DUP1"
    },
    "1061": {
      "op": "DUP4"
    },
    "1062": {
      "op": "CALLDATALOAD"
    },
    "1063": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "1065": {
      "op": "NOT"
    },
    "1066": {
      "op": "DUP5"
    },
    "1067": {
      "op": "CALLDATASIZE"
    },
    "1068": {
      "op": "SUB"
    },
    "1069": {
      "op": "ADD"
    },
    "1070": {
      "op": "DUP2"
    },
    "1071": {
      "op": "SLT"
    },
    "1072": {
      "op": "PUSH2",
      "value": "0x438"
    },
    "1075": {
      "op": "JUMPI"
    },
    "1076": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1078": {
      "op": "DUP1"
    },
    "1079": {
      "op": "REVERT"
    },
    "1080": {
      "op": "JUMPDEST"
    },
    "1081": {
      "op": "DUP4"
    },
    "1082": {
      "op": "ADD"
    },
    "1083": {
      "op": "DUP1"
    },
    "1084": {
      "op": "CALLDATALOAD"
    },
    "1085": {
      "op": "SWAP2"
    },
    "1086": {
      "op": "POP"
    },
    "1087": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1096": {
      "op": "DUP3"
    },
    "1097": {
      "op": "GT"
    },
    "1098": {
      "op": "ISZERO"
    },
    "1099": {
      "op": "PUSH2",
      "value": "0x453"
    },
    "1102": {
      "op": "JUMPI"
    },
    "1103": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1105": {
      "op": "DUP1"
    },
    "1106": {
      "op": "REVERT"
    },
    "1107": {
      "op": "JUMPDEST"
    },
    "1108": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1110": {
      "op": "ADD"
    },
    "1111": {
      "op": "SWAP2"
    },
    "1112": {
      "op": "POP"
    },
    "1113": {
      "op": "CALLDATASIZE"
    },
    "1114": {
      "op": "DUP2"
    },
    "1115": {
      "op": "SWAP1"
    },
    "1116": {
      "op": "SUB"
    },
    "1117": {
      "op": "DUP3"
    },
    "1118": {
      "op": "SGT"
    },
    "1119": {
      "op": "ISZERO"
    },
    "1120": {
      "op": "PUSH2",
      "value": "0x468"
    },
    "1123": {
      "op": "JUMPI"
    },
    "1124": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1126": {
      "op": "DUP1"
    },
    "1127": {
      "op": "REVERT"
    },
    "1128": {
      "op": "JUMPDEST"
    },
    "1129": {
      "op": "SWAP3"
    },
    "1130": {
      "op": "POP"
    },
    "1131": {
      "op": "SWAP3"
    },
    "1132": {
      "op": "SWAP1"
    },
    "1133": {
      "op": "POP"
    },
    "1134": {
      "jump": "o",
      "op": "JUMP"
    },
    "1135": {
      "op": "JUMPDEST"
    },
    "1136": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1141": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1143": {
      "op": "SHL"
    },
    "1144": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1146": {
      "op": "MSTORE"
    },
    "1147": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "1149": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1151": {
      "op": "MSTORE"
    },
    "1152": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1154": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1156": {
      "op": "REVERT"
    },
    "1157": {
      "op": "JUMPDEST"
    },
    "1158": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1160": {
      "op": "MLOAD"
    },
    "1161": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1163": {
      "op": "DUP2"
    },
    "1164": {
      "op": "ADD"
    },
    "1165": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1174": {
      "op": "DUP2"
    },
    "1175": {
      "op": "GT"
    },
    "1176": {
      "op": "DUP3"
    },
    "1177": {
      "op": "DUP3"
    },
    "1178": {
      "op": "LT"
    },
    "1179": {
      "op": "OR"
    },
    "1180": {
      "op": "ISZERO"
    },
    "1181": {
      "op": "PUSH2",
      "value": "0x4A8"
    },
    "1184": {
      "op": "JUMPI"
    },
    "1185": {
      "op": "PUSH2",
      "value": "0x4A8"
    },
    "1188": {
      "op": "PUSH2",
      "value": "0x46F"
    },
    "1191": {
      "jump": "i",
      "op": "JUMP"
    },
    "1192": {
      "op": "JUMPDEST"
    },
    "1193": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1195": {
      "op": "MSTORE"
    },
    "1196": {
      "op": "SWAP1"
    },
    "1197": {
      "jump": "o",
      "op": "JUMP"
    },
    "1198": {
      "op": "JUMPDEST"
    },
    "1199": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1201": {
      "op": "MLOAD"
    },
    "1202": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "1205": {
      "op": "DUP2"
    },
    "1206": {
      "op": "ADD"
    },
    "1207": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1216": {
      "op": "DUP2"
    },
    "1217": {
      "op": "GT"
    },
    "1218": {
      "op": "DUP3"
    },
    "1219": {
      "op": "DUP3"
    },
    "1220": {
      "op": "LT"
    },
    "1221": {
      "op": "OR"
    },
    "1222": {
      "op": "ISZERO"
    },
    "1223": {
      "op": "PUSH2",
      "value": "0x4A8"
    },
    "1226": {
      "op": "JUMPI"
    },
    "1227": {
      "op": "PUSH2",
      "value": "0x4A8"
    },
    "1230": {
      "op": "PUSH2",
      "value": "0x46F"
    },
    "1233": {
      "jump": "i",
      "op": "JUMP"
    },
    "1234": {
      "op": "JUMPDEST"
    },
    "1235": {
      "op": "DUP1"
    },
    "1236": {
      "op": "CALLDATALOAD"
    },
    "1237": {
      "op": "DUP1"
    },
    "1238": {
      "op": "ISZERO"
    },
    "1239": {
      "op": "ISZERO"
    },
    "1240": {
      "op": "DUP2"
    },
    "1241": {
      "op": "EQ"
    },
    "1242": {
      "op": "PUSH2",
      "value": "0x2DA"
    },
    "1245": {
      "op": "JUMPI"
    },
    "1246": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1248": {
      "op": "DUP1"
    },
    "1249": {
      "op": "REVERT"
    },
    "1250": {
      "op": "JUMPDEST"
    },
    "1251": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1253": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "1256": {
      "op": "DUP3"
    },
    "1257": {
      "op": "DUP5"
    },
    "1258": {
      "op": "SUB"
    },
    "1259": {
      "op": "SLT"
    },
    "1260": {
      "op": "ISZERO"
    },
    "1261": {
      "op": "PUSH2",
      "value": "0x4F5"
    },
    "1264": {
      "op": "JUMPI"
    },
    "1265": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1267": {
      "op": "DUP1"
    },
    "1268": {
      "op": "REVERT"
    },
    "1269": {
      "op": "JUMPDEST"
    },
    "1270": {
      "op": "PUSH2",
      "value": "0x4FD"
    },
    "1273": {
      "op": "PUSH2",
      "value": "0x485"
    },
    "1276": {
      "jump": "i",
      "op": "JUMP"
    },
    "1277": {
      "op": "JUMPDEST"
    },
    "1278": {
      "op": "DUP4"
    },
    "1279": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1281": {
      "op": "DUP5"
    },
    "1282": {
      "op": "ADD"
    },
    "1283": {
      "op": "SLT"
    },
    "1284": {
      "op": "PUSH2",
      "value": "0x50C"
    },
    "1287": {
      "op": "JUMPI"
    },
    "1288": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1290": {
      "op": "DUP1"
    },
    "1291": {
      "op": "REVERT"
    },
    "1292": {
      "op": "JUMPDEST"
    },
    "1293": {
      "op": "PUSH2",
      "value": "0x514"
    },
    "1296": {
      "op": "PUSH2",
      "value": "0x4AE"
    },
    "1299": {
      "jump": "i",
      "op": "JUMP"
    },
    "1300": {
      "op": "JUMPDEST"
    },
    "1301": {
      "op": "DUP1"
    },
    "1302": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "1305": {
      "op": "DUP6"
    },
    "1306": {
      "op": "ADD"
    },
    "1307": {
      "op": "DUP7"
    },
    "1308": {
      "op": "DUP2"
    },
    "1309": {
      "op": "GT"
    },
    "1310": {
      "op": "ISZERO"
    },
    "1311": {
      "op": "PUSH2",
      "value": "0x527"
    },
    "1314": {
      "op": "JUMPI"
    },
    "1315": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1317": {
      "op": "DUP1"
    },
    "1318": {
      "op": "REVERT"
    },
    "1319": {
      "op": "JUMPDEST"
    },
    "1320": {
      "op": "DUP6"
    },
    "1321": {
      "op": "JUMPDEST"
    },
    "1322": {
      "op": "DUP2"
    },
    "1323": {
      "op": "DUP2"
    },
    "1324": {
      "op": "LT"
    },
    "1325": {
      "op": "ISZERO"
    },
    "1326": {
      "op": "PUSH2",
      "value": "0x548"
    },
    "1329": {
      "op": "JUMPI"
    },
    "1330": {
      "op": "PUSH2",
      "value": "0x53A"
    },
    "1333": {
      "op": "DUP2"
    },
    "1334": {
      "op": "PUSH2",
      "value": "0x2C9"
    },
    "1337": {
      "jump": "i",
      "op": "JUMP"
    },
    "1338": {
      "op": "JUMPDEST"
    },
    "1339": {
      "op": "DUP5"
    },
    "1340": {
      "op": "MSTORE"
    },
    "1341": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1343": {
      "op": "SWAP4"
    },
    "1344": {
      "op": "DUP5"
    },
    "1345": {
      "op": "ADD"
    },
    "1346": {
      "op": "SWAP4"
    },
    "1347": {
      "op": "ADD"
    },
    "1348": {
      "op": "PUSH2",
      "value": "0x529"
    },
    "1351": {
      "op": "JUMP"
    },
    "1352": {
      "op": "JUMPDEST"
    },
    "1353": {
      "op": "POP"
    },
    "1354": {
      "op": "DUP2"
    },
    "1355": {
      "op": "DUP5"
    },
    "1356": {
      "op": "MSTORE"
    },
    "1357": {
      "op": "PUSH2",
      "value": "0x555"
    },
    "1360": {
      "op": "DUP2"
    },
    "1361": {
      "op": "PUSH2",
      "value": "0x4D2"
    },
    "1364": {
      "jump": "i",
      "op": "JUMP"
    },
    "1365": {
      "op": "JUMPDEST"
    },
    "1366": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1368": {
      "op": "DUP6"
    },
    "1369": {
      "op": "ADD"
    },
    "1370": {
      "op": "MSTORE"
    },
    "1371": {
      "op": "POP"
    },
    "1372": {
      "op": "POP"
    },
    "1373": {
      "op": "POP"
    },
    "1374": {
      "op": "PUSH2",
      "value": "0x56A"
    },
    "1377": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "1380": {
      "op": "DUP5"
    },
    "1381": {
      "op": "ADD"
    },
    "1382": {
      "op": "PUSH2",
      "value": "0x4D2"
    },
    "1385": {
      "jump": "i",
      "op": "JUMP"
    },
    "1386": {
      "op": "JUMPDEST"
    },
    "1387": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1389": {
      "op": "DUP3"
    },
    "1390": {
      "op": "ADD"
    },
    "1391": {
      "op": "MSTORE"
    },
    "1392": {
      "op": "SWAP4"
    },
    "1393": {
      "op": "SWAP3"
    },
    "1394": {
      "op": "POP"
    },
    "1395": {
      "op": "POP"
    },
    "1396": {
      "op": "POP"
    },
    "1397": {
      "jump": "o",
      "op": "JUMP"
    },
    "1398": {
      "op": "JUMPDEST"
    },
    "1399": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1401": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1403": {
      "op": "DUP3"
    },
    "1404": {
      "op": "DUP5"
    },
    "1405": {
      "op": "SUB"
    },
    "1406": {
      "op": "SLT"
    },
    "1407": {
      "op": "ISZERO"
    },
    "1408": {
      "op": "PUSH2",
      "value": "0x588"
    },
    "1411": {
      "op": "JUMPI"
    },
    "1412": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1414": {
      "op": "DUP1"
    },
    "1415": {
      "op": "REVERT"
    },
    "1416": {
      "op": "JUMPDEST"
    },
    "1417": {
      "op": "PUSH2",
      "value": "0x41A"
    },
    "1420": {
      "op": "DUP3"
    },
    "1421": {
      "op": "PUSH2",
      "value": "0x2C9"
    },
    "1424": {
      "jump": "i",
      "op": "JUMP"
    },
    "1425": {
      "op": "JUMPDEST"
    },
    "1426": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1428": {
      "op": "DUP3"
    },
    "1429": {
      "op": "PUSH2",
      "value": "0x5AE"
    },
    "1432": {
      "op": "JUMPI"
    },
    "1433": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1438": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1440": {
      "op": "SHL"
    },
    "1441": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1443": {
      "op": "MSTORE"
    },
    "1444": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "1446": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1448": {
      "op": "MSTORE"
    },
    "1449": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1451": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1453": {
      "op": "REVERT"
    },
    "1454": {
      "op": "JUMPDEST"
    },
    "1455": {
      "op": "POP"
    },
    "1456": {
      "op": "MOD"
    },
    "1457": {
      "op": "SWAP1"
    },
    "1458": {
      "jump": "o",
      "op": "JUMP"
    },
    "1459": {
      "op": "JUMPDEST"
    },
    "1460": {
      "op": "DUP1"
    },
    "1461": {
      "op": "DUP3"
    },
    "1462": {
      "op": "ADD"
    },
    "1463": {
      "op": "DUP1"
    },
    "1464": {
      "op": "DUP3"
    },
    "1465": {
      "op": "GT"
    },
    "1466": {
      "op": "ISZERO"
    },
    "1467": {
      "op": "PUSH2",
      "value": "0x2C3"
    },
    "1470": {
      "op": "JUMPI"
    },
    "1471": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1476": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1478": {
      "op": "SHL"
    },
    "1479": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1481": {
      "op": "MSTORE"
    },
    "1482": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1484": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1486": {
      "op": "MSTORE"
    },
    "1487": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1489": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1491": {
      "op": "REVERT"
    },
    "1492": {
      "op": "JUMPDEST"
    },
    "1493": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1498": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1500": {
      "op": "SHL"
    },
    "1501": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1503": {
      "op": "MSTORE"
    },
    "1504": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "1506": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1508": {
      "op": "MSTORE"
    },
    "1509": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1511": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1513": {
      "op": "REVERT"
    },
    "1514": {
      "op": "JUMPDEST"
    },
    "1515": {
      "op": "DUP2"
    },
    "1516": {
      "op": "MLOAD"
    },
    "1517": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "1520": {
      "op": "DUP3"
    },
    "1521": {
      "op": "ADD"
    },
    "1522": {
      "op": "SWAP1"
    },
    "1523": {
      "op": "DUP3"
    },
    "1524": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1526": {
      "op": "JUMPDEST"
    },
    "1527": {
      "op": "PUSH1",
      "value": "0x9"
    },
    "1529": {
      "op": "DUP2"
    },
    "1530": {
      "op": "LT"
    },
    "1531": {
      "op": "ISZERO"
    },
    "1532": {
      "op": "PUSH2",
      "value": "0x618"
    },
    "1535": {
      "op": "JUMPI"
    },
    "1536": {
      "op": "DUP3"
    },
    "1537": {
      "op": "MLOAD"
    },
    "1538": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1540": {
      "op": "AND"
    },
    "1541": {
      "op": "DUP3"
    },
    "1542": {
      "op": "MSTORE"
    },
    "1543": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1545": {
      "op": "SWAP3"
    },
    "1546": {
      "op": "DUP4"
    },
    "1547": {
      "op": "ADD"
    },
    "1548": {
      "op": "SWAP3"
    },
    "1549": {
      "op": "SWAP1"
    },
    "1550": {
      "op": "SWAP2"
    },
    "1551": {
      "op": "ADD"
    },
    "1552": {
      "op": "SWAP1"
    },
    "1553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1555": {
      "op": "ADD"
    },
    "1556": {
      "op": "PUSH2",
      "value": "0x5F6"
    },
    "1559": {
      "op": "JUMP"
    },
    "1560": {
      "op": "JUMPDEST"
    },
    "1561": {
      "op": "POP"
    },
    "1562": {
      "op": "POP"
    },
    "1563": {
      "op": "POP"
    },
    "1564": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1566": {
      "op": "DUP4"
    },
    "1567": {
      "op": "ADD"
    },
    "1568": {
      "op": "MLOAD"
    },
    "1569": {
      "op": "ISZERO"
    },
    "1570": {
      "op": "ISZERO"
    },
    "1571": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "1574": {
      "op": "DUP4"
    },
    "1575": {
      "op": "ADD"
    },
    "1576": {
      "op": "MSTORE"
    },
    "1577": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1579": {
      "op": "SWAP1"
    },
    "1580": {
      "op": "SWAP3"
    },
    "1581": {
      "op": "ADD"
    },
    "1582": {
      "op": "MLOAD"
    },
    "1583": {
      "op": "ISZERO"
    },
    "1584": {
      "op": "ISZERO"
    },
    "1585": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "1588": {
      "op": "SWAP1"
    },
    "1589": {
      "op": "SWAP2"
    },
    "1590": {
      "op": "ADD"
    },
    "1591": {
      "op": "MSTORE"
    },
    "1592": {
      "op": "SWAP1"
    },
    "1593": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "d9261e7cf5ffeb7cf2f04b769681ea9eab5e241f",
  "source": "/*\n  ________                           ____.       __\n /  _____/_____    _____   ____     |    |__ ___/  |_  ________ __\n/   \\  ___\\__  \\  /     \\_/ __ \\    |    |  |  \\   __\\/  ___/  |  \\\n\\    \\_\\  \\/ __ \\|  Y Y  \\  ___//\\__|    |  |  /|  |  \\___ \\|  |  /\n \\______  (____  /__|_|  /\\___  >________|____/ |__| /____  >____/\n        \\/     \\/      \\/     \\/                          \\/\nhttps://gamejutsu.app\n*/\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"../../interfaces/IGameJutsuRules.sol\";\n\n/**\n    @title TicTacToe Rules\n    @notice Our take on the classic game, rules defined on-chain to never be checked\n    @notice except by the arbiter when a dispute arises.\n    @notice ETHOnline2022 submission by ChainHackers\n    @author Gene A. Tsvigun\n    @dev The state encodes the board as a 3x3 array of uint8s with 0 for empty, 1 for X, and 2 for O\n    @dev explicitly keeping wins as `bool crossesWin` and `bool noughtsWin`\n  */\ncontract TicTacToeRules is IGameJutsuRules {\n\n    struct Board {\n        uint8[9] cells; //TODO pack it into a single uint16\n        bool crossesWin;\n        bool naughtsWin;\n    }\n\ntype Move is uint8;\n\n    function isValidMove(GameState calldata _gameState, uint8 playerId, bytes calldata _move) external pure override returns (bool) {\n        Board memory b = abi.decode(_gameState.state, (Board));\n        uint8 _m = abi.decode(_move, (uint8));\n        Move m = Move.wrap(_m);\n        bool playerIdMatchesTurn = _gameState.nonce % 2 == playerId;\n        return playerIdMatchesTurn && !b.crossesWin && !b.naughtsWin && isMoveWithinRange(m) && isCellEmpty(b, m);\n    }\n\n    function transition(GameState calldata _gameState, uint8 playerId, bytes calldata _move) external pure override returns (GameState memory) {\n        Board memory b = abi.decode(_gameState.state, (Board));\n        uint8 _m = abi.decode(_move, (uint8));\n        b.cells[_m] = uint8(1 + _gameState.nonce % 2);\n        return GameState(_gameState.gameId, _gameState.nonce + 1, abi.encode(b));\n    }\n\n    function defaultInitialGameState() external pure returns (bytes memory) {\n        return abi.encode(Board([0, 0, 0, 0, 0, 0, 0, 0, 0], false, false));\n    }\n\n    function isCellEmpty(Board memory b, Move move) private pure returns (bool) {\n        return b.cells[Move.unwrap(move)] == 0;\n    }\n\n\n    function isMoveWithinRange(Move move) private pure returns (bool){\n        return Move.unwrap(move) < 9;\n    }\n}",
  "sourceMap": "952:1487:4:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/tic-tac-toe/TicTacToeRules.sol",
  "type": "contract"
}
